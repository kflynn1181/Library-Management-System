//Code created by Kevin Flynn C18502203 and Carl Herdman C18703995


//import the necessary modules
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import java.util.Random;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.apache.commons.lang3.ArrayUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C18502203
 */
public class SampleJFrame extends javax.swing.JFrame {

    /**
     * Creates new form SampleJFrame
     */
    public SampleJFrame() {
        tableModel = new javax.swing.table.DefaultTableModel();
        initComponents();
        viewBooksTable.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Login = new javax.swing.JPanel();
        LoginNameTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        LoginPasswordTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        HomePage = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        ViewBooksButton = new javax.swing.JButton();
        AddBooksButton = new javax.swing.JButton();
        RemoveBooksButton = new javax.swing.JButton();
        ViewUsersButton = new javax.swing.JButton();
        AddUsersButton = new javax.swing.JButton();
        RemoveUsersButton = new javax.swing.JButton();
        OverdueAccountsButton = new javax.swing.JButton();
        IssueBooksButton = new javax.swing.JButton();
        ReturnBooksButton = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        ListOfBooks = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewBooksTable = new javax.swing.JTable();
        ReturnHomeButton1 = new javax.swing.JButton();
        PrintButton1 = new javax.swing.JButton();
        AddABook = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        AddABookBookTitleTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        AddABookBookAuthourTextField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        AddABookBookPublisherTextField = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        AddABookBookGenreTextField = new javax.swing.JTextField();
        AddABookSubmitButton = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        AddABookBookPriceTextField = new javax.swing.JTextField();
        AddABookReturnHomeButton = new javax.swing.JButton();
        jLabel62 = new javax.swing.JLabel();
        AddABookBookStockTextField = new javax.swing.JTextField();
        RemoveABook = new javax.swing.JPanel();
        jLabel30 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        RemoveABookBookTitleTextField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        RemoveABookBookAddressTextField = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        RemoveABookBookPublisherTextField = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        RemoveABookBookGenreTextField = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        RemoveABookBookPriceTextField = new javax.swing.JTextField();
        RemoveABookSubmitButton = new javax.swing.JButton();
        RemoveABookReturnHomeButton = new javax.swing.JButton();
        jLabel63 = new javax.swing.JLabel();
        RemoveABookBookStockTextField = new javax.swing.JTextField();
        ListOfUsers = new javax.swing.JPanel();
        jLabel50 = new javax.swing.JLabel();
        ListOfUsersReturnHomeButton = new javax.swing.JButton();
        ListOfUsersPrintButton = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        viewUsersTable = new javax.swing.JTable();
        AddAUser = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        AddAUserUserNameTextField = new javax.swing.JTextField();
        jLabel52 = new javax.swing.JLabel();
        AddAUserUserAddressTextField = new javax.swing.JTextField();
        jLabel53 = new javax.swing.JLabel();
        AddAUserUserEmailTextField = new javax.swing.JTextField();
        AddAUserSubmitButton = new javax.swing.JButton();
        jLabel54 = new javax.swing.JLabel();
        AddAUserUserPhoneTextField = new javax.swing.JTextField();
        AddAUserReturnHomeButton = new javax.swing.JButton();
        RemoveAUser = new javax.swing.JPanel();
        jLabel55 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        RemoveAUserUserNameTextField = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        RemoveAUserUserAddressTextField = new javax.swing.JTextField();
        jLabel60 = new javax.swing.JLabel();
        RemoveAUserUserEmailTextField = new javax.swing.JTextField();
        RemoveAUserSubmitButton = new javax.swing.JButton();
        jLabel61 = new javax.swing.JLabel();
        RemoveAUserUserPhoneTextField = new javax.swing.JTextField();
        RemoveAUserReturnHomeButton = new javax.swing.JButton();
        IssueABook = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        IssueABookBookTitleTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        IssueABookBookAuthourTextField = new javax.swing.JTextField();
        jLabel35 = new javax.swing.JLabel();
        IssueABookBookPublisherTextField = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        IssueABookBookGenreTextField = new javax.swing.JTextField();
        jLabel37 = new javax.swing.JLabel();
        IssueABookBookPriceTextField = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        IssueABookPersonNameTextField = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        IssueABookPersonAddressTextField = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        IssueABookPersonEmailTextField = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        IssueABookPersonPhoneTextField = new javax.swing.JTextField();
        IssueABookSubmitButton = new javax.swing.JButton();
        IssueABookReturnHomeButton = new javax.swing.JButton();
        IssueABookIssuedBooksButton = new javax.swing.JButton();
        IssueABookBuyOrRentBox = new javax.swing.JComboBox<>();
        jLabel64 = new javax.swing.JLabel();
        IssueABookBookStockTextField = new javax.swing.JTextField();
        IssuedBooks = new javax.swing.JPanel();
        jLabel42 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        viewIssuedBooksTable = new javax.swing.JTable();
        IssuedBooksReturnHomeButton = new javax.swing.JButton();
        IssuedBooksPrintButton = new javax.swing.JButton();
        OverdueAccounts = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        viewOverdueAccountsTable = new javax.swing.JTable();
        OverdueAccountsReturnHomeButton = new javax.swing.JButton();
        OverdueAccountsPrintButton = new javax.swing.JButton();
        ReturnABook = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        ReturnABookBookTitleTextField = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        ReturnABookBookAuthourTextField = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        ReturnABookBookPublisherTextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        ReturnABookBookGenreTextField = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        ReturnABookBookPriceTextField = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        ReturnABookPersonNameTextField = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        ReturnABookPersonAddressTextField = new javax.swing.JTextField();
        jLabel46 = new javax.swing.JLabel();
        ReturnABookPersonEmailTextField = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        ReturnABookPersonPhoneTextField = new javax.swing.JTextField();
        ReturnABookBuyOrRentBox = new javax.swing.JComboBox<>();
        ReturnABookSubmitButton = new javax.swing.JButton();
        ReturnABookReturnHomeButton = new javax.swing.JButton();
        jLabel65 = new javax.swing.JLabel();
        ReturnABookBookStockTextField = new javax.swing.JTextField();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton8.setText("jButton8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new java.awt.CardLayout());

        Login.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        LoginNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginNameTextFieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bauhaus 93", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login Page");
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("Username:");

        jLabel24.setText("Password:");

        LoginPasswordTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginPasswordTextFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Login");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("<html><u>Library Management System</u></html>");

        javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
        Login.setLayout(LoginLayout);
        LoginLayout.setHorizontalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addGap(353, 353, 353)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoginPasswordTextField)
                    .addComponent(LoginNameTextField)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(353, Short.MAX_VALUE))
        );
        LoginLayout.setVerticalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginLayout.createSequentialGroup()
                .addContainerGap(71, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoginNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LoginPasswordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton1)
                .addGap(71, 71, 71))
        );

        jPanel3.add(Login, "card9");

        jLabel27.setFont(new java.awt.Font("Bauhaus 93", 0, 36)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Library Management System");
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel28.setFont(new java.awt.Font("Bauhaus 93", 0, 12)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Updated: 21st April, 2022");
        jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ViewBooksButton.setText("View Books");
        ViewBooksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBooksButtonActionPerformed(evt);
            }
        });

        AddBooksButton.setText("Add Books");
        AddBooksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBooksButtonActionPerformed(evt);
            }
        });

        RemoveBooksButton.setText("Remove Books");
        RemoveBooksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveBooksButtonActionPerformed(evt);
            }
        });

        ViewUsersButton.setText("View Users");
        ViewUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewUsersButtonActionPerformed(evt);
            }
        });

        AddUsersButton.setText("Add Users");
        AddUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUsersButtonActionPerformed(evt);
            }
        });

        RemoveUsersButton.setText("Remove Users");
        RemoveUsersButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveUsersButtonActionPerformed(evt);
            }
        });

        OverdueAccountsButton.setText("Overdue Accounts");
        OverdueAccountsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OverdueAccountsButtonActionPerformed(evt);
            }
        });

        IssueBooksButton.setText("Issue Books");
        IssueBooksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueBooksButtonActionPerformed(evt);
            }
        });

        ReturnBooksButton.setText("Return Books");
        ReturnBooksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnBooksButtonActionPerformed(evt);
            }
        });

        LogoutButton.setText("Logout");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout HomePageLayout = new javax.swing.GroupLayout(HomePage);
        HomePage.setLayout(HomePageLayout);
        HomePageLayout.setHorizontalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(HomePageLayout.createSequentialGroup()
                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 635, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(LogoutButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HomePageLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ViewUsersButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ViewBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddBooksButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(AddUsersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RemoveBooksButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(RemoveUsersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(OverdueAccountsButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IssueBooksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(ReturnBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        HomePageLayout.setVerticalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePageLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReturnBooksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ViewBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AddBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RemoveBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(IssueBooksButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(OverdueAccountsButton, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                    .addComponent(RemoveUsersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddUsersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ViewUsersButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.add(HomePage, "card9");

        jLabel4.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("List of Books");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        viewBooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(viewBooksTable);

        ReturnHomeButton1.setText("Return to Home Page");
        ReturnHomeButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHomeButton1ActionPerformed(evt);
            }
        });

        PrintButton1.setText("Print");
        PrintButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PrintButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout ListOfBooksLayout = new javax.swing.GroupLayout(ListOfBooks);
        ListOfBooks.setLayout(ListOfBooksLayout);
        ListOfBooksLayout.setHorizontalGroup(
            ListOfBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, ListOfBooksLayout.createSequentialGroup()
                .addComponent(PrintButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReturnHomeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        ListOfBooksLayout.setVerticalGroup(
            ListOfBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListOfBooksLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(ListOfBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnHomeButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(PrintButton1)))
        );

        jPanel3.add(ListOfBooks, "card10");

        jLabel5.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Add a Book");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("Book Title:");

        jLabel7.setText("Book Authour:");

        jLabel8.setText("Book Publisher:");

        jLabel9.setText("Book Genre:");

        AddABookSubmitButton.setText("Submit");
        AddABookSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddABookSubmitButtonActionPerformed(evt);
            }
        });

        jLabel29.setText("Book Price:");

        AddABookReturnHomeButton.setText("Return to Home Page");
        AddABookReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddABookReturnHomeButtonActionPerformed(evt);
            }
        });

        jLabel62.setText("Book Stock:");

        javax.swing.GroupLayout AddABookLayout = new javax.swing.GroupLayout(AddABook);
        AddABook.setLayout(AddABookLayout);
        AddABookLayout.setHorizontalGroup(
            AddABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddABookLayout.createSequentialGroup()
                .addGap(218, 218, 218)
                .addComponent(AddABookSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                .addComponent(AddABookReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(AddABookLayout.createSequentialGroup()
                .addGap(120, 120, 120)
                .addGroup(AddABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel8)
                    .addComponent(jLabel7)
                    .addComponent(jLabel6)
                    .addComponent(AddABookBookTitleTextField)
                    .addComponent(AddABookBookAuthourTextField)
                    .addComponent(AddABookBookPublisherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addGroup(AddABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel29)
                    .addComponent(AddABookBookGenreTextField)
                    .addComponent(jLabel9)
                    .addComponent(AddABookBookPriceTextField)
                    .addComponent(jLabel62)
                    .addComponent(AddABookBookStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        AddABookLayout.setVerticalGroup(
            AddABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddABookLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addGroup(AddABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AddABookLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddABookBookTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddABookBookAuthourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddABookLayout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddABookBookGenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddABookBookPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddABookLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(AddABookBookPublisherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AddABookLayout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(AddABookBookStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel62))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addGroup(AddABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddABookSubmitButton)
                    .addComponent(AddABookReturnHomeButton))
                .addContainerGap())
        );

        jPanel3.add(AddABook, "card11");

        jLabel30.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel30.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel30.setText("Remove a Book");
        jLabel30.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setText("Book Title:");

        jLabel11.setText("Book Authour:");

        jLabel31.setText("Book Publisher:");

        jLabel32.setText("Book Genre:");

        jLabel33.setText("Book Price:");

        RemoveABookSubmitButton.setText("Submit");
        RemoveABookSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveABookSubmitButtonActionPerformed(evt);
            }
        });

        RemoveABookReturnHomeButton.setText("Return to Home Page");
        RemoveABookReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveABookReturnHomeButtonActionPerformed(evt);
            }
        });

        jLabel63.setText("Book Stock:");

        javax.swing.GroupLayout RemoveABookLayout = new javax.swing.GroupLayout(RemoveABook);
        RemoveABook.setLayout(RemoveABookLayout);
        RemoveABookLayout.setHorizontalGroup(
            RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel30, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(RemoveABookLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(RemoveABookSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(72, 72, 72)
                .addComponent(RemoveABookReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RemoveABookLayout.createSequentialGroup()
                .addGap(96, 96, 96)
                .addGroup(RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(RemoveABookBookPublisherTextField)
                    .addComponent(RemoveABookBookAddressTextField)
                    .addComponent(RemoveABookBookTitleTextField)
                    .addGroup(RemoveABookLayout.createSequentialGroup()
                        .addGroup(RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel31)
                            .addComponent(jLabel11)
                            .addComponent(jLabel10))
                        .addGap(0, 178, Short.MAX_VALUE)))
                .addGap(94, 94, 94)
                .addGroup(RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel33)
                    .addComponent(jLabel32)
                    .addComponent(jLabel63)
                    .addGroup(RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(RemoveABookBookStockTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(RemoveABookBookPriceTextField, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(RemoveABookBookGenreTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(138, 138, 138))
        );
        RemoveABookLayout.setVerticalGroup(
            RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveABookLayout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jLabel30, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addGroup(RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RemoveABookLayout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveABookBookGenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel33)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveABookBookPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel63)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveABookBookStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RemoveABookLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveABookBookTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveABookBookAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(RemoveABookBookPublisherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(80, 80, 80)
                .addGroup(RemoveABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RemoveABookSubmitButton)
                    .addComponent(RemoveABookReturnHomeButton))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel3.add(RemoveABook, "card12");

        jLabel50.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel50.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel50.setText("List of Users");
        jLabel50.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ListOfUsersReturnHomeButton.setText("Return to Home Page");
        ListOfUsersReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListOfUsersReturnHomeButtonActionPerformed(evt);
            }
        });

        ListOfUsersPrintButton.setText("Print");
        ListOfUsersPrintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ListOfUsersPrintButtonActionPerformed(evt);
            }
        });

        viewUsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane7.setViewportView(viewUsersTable);

        javax.swing.GroupLayout ListOfUsersLayout = new javax.swing.GroupLayout(ListOfUsers);
        ListOfUsers.setLayout(ListOfUsersLayout);
        ListOfUsersLayout.setHorizontalGroup(
            ListOfUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListOfUsersLayout.createSequentialGroup()
                .addComponent(ListOfUsersPrintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ListOfUsersReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        ListOfUsersLayout.setVerticalGroup(
            ListOfUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ListOfUsersLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ListOfUsersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ListOfUsersPrintButton)
                    .addComponent(ListOfUsersReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.add(ListOfUsers, "card10");

        jLabel49.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel49.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel49.setText("Add a User");
        jLabel49.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel51.setText("User Name:");

        jLabel52.setText("User Address:");

        jLabel53.setText("User Email:");

        AddAUserSubmitButton.setText("Submit");
        AddAUserSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAUserSubmitButtonActionPerformed(evt);
            }
        });

        jLabel54.setText("User Phone:");

        AddAUserReturnHomeButton.setText("Return to Home Page");
        AddAUserReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddAUserReturnHomeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddAUserLayout = new javax.swing.GroupLayout(AddAUser);
        AddAUser.setLayout(AddAUserLayout);
        AddAUserLayout.setHorizontalGroup(
            AddAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel49, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddAUserLayout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addGroup(AddAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddAUserLayout.createSequentialGroup()
                        .addComponent(AddAUserUserPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(AddAUserLayout.createSequentialGroup()
                        .addGroup(AddAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel54)
                            .addComponent(AddAUserUserEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel53))
                        .addContainerGap(294, Short.MAX_VALUE))
                    .addGroup(AddAUserLayout.createSequentialGroup()
                        .addGroup(AddAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel52)
                                .addComponent(jLabel51)
                                .addComponent(AddAUserUserNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addComponent(AddAUserUserAddressTextField))
                            .addComponent(AddAUserSubmitButton, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 142, Short.MAX_VALUE)
                        .addComponent(AddAUserReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        AddAUserLayout.setVerticalGroup(
            AddAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddAUserLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel49, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel51)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddAUserUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel52)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddAUserUserAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel53)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddAUserUserEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel54)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(AddAUserUserPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(AddAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(AddAUserReturnHomeButton)
                    .addComponent(AddAUserSubmitButton))
                .addContainerGap())
        );

        jPanel3.add(AddAUser, "card11");

        jLabel55.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel55.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel55.setText("Remove a User");
        jLabel55.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel56.setText("User Name:");

        jLabel57.setText("User Address:");

        jLabel60.setText("User Email:");

        RemoveAUserSubmitButton.setText("Submit");
        RemoveAUserSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveAUserSubmitButtonActionPerformed(evt);
            }
        });

        jLabel61.setText("User Phone:");

        RemoveAUserReturnHomeButton.setText("Return to Home Page");
        RemoveAUserReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveAUserReturnHomeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RemoveAUserLayout = new javax.swing.GroupLayout(RemoveAUser);
        RemoveAUser.setLayout(RemoveAUserLayout);
        RemoveAUserLayout.setHorizontalGroup(
            RemoveAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel55, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(RemoveAUserLayout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addGroup(RemoveAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RemoveAUserLayout.createSequentialGroup()
                        .addGroup(RemoveAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel57)
                            .addComponent(jLabel56)
                            .addComponent(RemoveAUserUserNameTextField)
                            .addComponent(RemoveAUserUserAddressTextField)
                            .addComponent(RemoveAUserSubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(RemoveAUserReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RemoveAUserLayout.createSequentialGroup()
                        .addGroup(RemoveAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(RemoveAUserUserPhoneTextField, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel61, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(RemoveAUserUserEmailTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jLabel60, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(294, Short.MAX_VALUE))))
        );
        RemoveAUserLayout.setVerticalGroup(
            RemoveAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveAUserLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel56)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RemoveAUserUserNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel57)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RemoveAUserUserAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel60)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RemoveAUserUserEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel61)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RemoveAUserUserPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(RemoveAUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RemoveAUserSubmitButton)
                    .addComponent(RemoveAUserReturnHomeButton))
                .addContainerGap())
        );

        jPanel3.add(RemoveAUser, "card11");

        jLabel34.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("Issue a Book");
        jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel12.setText("Book Title:");

        jLabel13.setText("Book Authour:");

        jLabel35.setText("Book Publisher:");

        jLabel36.setText("Book Genre:");

        jLabel37.setText("Book Price:");

        jLabel38.setText("Person Name:");

        jLabel39.setText("Person Address:");

        jLabel40.setText("Person Email:");

        jLabel41.setText("Person Phone:");

        IssueABookSubmitButton.setText("Submit");
        IssueABookSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueABookSubmitButtonActionPerformed(evt);
            }
        });

        IssueABookReturnHomeButton.setText("Return Home");
        IssueABookReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueABookReturnHomeButtonActionPerformed(evt);
            }
        });

        IssueABookIssuedBooksButton.setText("Issued Books");
        IssueABookIssuedBooksButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueABookIssuedBooksButtonActionPerformed(evt);
            }
        });

        IssueABookBuyOrRentBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "To Buy", "To Rent"}));
        IssueABookBuyOrRentBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssueABookBuyOrRentBoxActionPerformed(evt);
            }
        });

        jLabel64.setText("Book Stock:");

        javax.swing.GroupLayout IssueABookLayout = new javax.swing.GroupLayout(IssueABook);
        IssueABook.setLayout(IssueABookLayout);
        IssueABookLayout.setHorizontalGroup(
            IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(IssueABookLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(IssueABookIssuedBooksButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(IssueABookSubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(IssueABookLayout.createSequentialGroup()
                        .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel37)
                            .addComponent(jLabel36)
                            .addComponent(jLabel35)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12)
                            .addComponent(IssueABookBookTitleTextField)
                            .addComponent(IssueABookBookAuthourTextField)
                            .addComponent(IssueABookBookPublisherTextField)
                            .addComponent(IssueABookBookGenreTextField)
                            .addComponent(IssueABookBookPriceTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addGap(76, 76, 76)
                        .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(IssueABookLayout.createSequentialGroup()
                                .addComponent(IssueABookBookStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(IssueABookBuyOrRentBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel38)
                            .addComponent(IssueABookPersonNameTextField)
                            .addComponent(jLabel39)
                            .addComponent(IssueABookPersonAddressTextField)
                            .addComponent(jLabel40)
                            .addComponent(IssueABookPersonEmailTextField)
                            .addComponent(jLabel41)
                            .addComponent(IssueABookPersonPhoneTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jLabel64))))
                .addGap(18, 18, 18)
                .addComponent(IssueABookReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(2, 2, 2))
        );
        IssueABookLayout.setVerticalGroup(
            IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IssueABookLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel38))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IssueABookBookTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueABookPersonNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel39))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IssueABookBookAuthourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueABookPersonAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel40))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IssueABookBookPublisherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueABookPersonEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(jLabel41))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IssueABookBookGenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueABookPersonPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel37)
                    .addComponent(jLabel64))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IssueABookBookPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueABookBuyOrRentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(IssueABookBookStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(IssueABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IssueABookSubmitButton)
                    .addComponent(IssueABookReturnHomeButton)
                    .addComponent(IssueABookIssuedBooksButton))
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel3.add(IssueABook, "card13");

        jLabel42.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel42.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel42.setText("Issued Books");
        jLabel42.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        viewIssuedBooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane4.setViewportView(viewIssuedBooksTable);

        IssuedBooksReturnHomeButton.setText("Go Back");
        IssuedBooksReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssuedBooksReturnHomeButtonActionPerformed(evt);
            }
        });

        IssuedBooksPrintButton.setText("Print");
        IssuedBooksPrintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IssuedBooksPrintButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout IssuedBooksLayout = new javax.swing.GroupLayout(IssuedBooks);
        IssuedBooks.setLayout(IssuedBooksLayout);
        IssuedBooksLayout.setHorizontalGroup(
            IssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel42, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, IssuedBooksLayout.createSequentialGroup()
                .addComponent(IssuedBooksPrintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(IssuedBooksReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        IssuedBooksLayout.setVerticalGroup(
            IssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(IssuedBooksLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 277, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(IssuedBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(IssuedBooksReturnHomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(IssuedBooksPrintButton)))
        );

        jPanel3.add(IssuedBooks, "card14");

        jLabel14.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setText("Overdue Accounts");
        jLabel14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        viewOverdueAccountsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane5.setViewportView(viewOverdueAccountsTable);

        OverdueAccountsReturnHomeButton.setText("Return to Home Page");
        OverdueAccountsReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OverdueAccountsReturnHomeButtonActionPerformed(evt);
            }
        });

        OverdueAccountsPrintButton.setText("Print");
        OverdueAccountsPrintButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OverdueAccountsPrintButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout OverdueAccountsLayout = new javax.swing.GroupLayout(OverdueAccounts);
        OverdueAccounts.setLayout(OverdueAccountsLayout);
        OverdueAccountsLayout.setHorizontalGroup(
            OverdueAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, OverdueAccountsLayout.createSequentialGroup()
                .addComponent(OverdueAccountsPrintButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(OverdueAccountsReturnHomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 1000, Short.MAX_VALUE)
        );
        OverdueAccountsLayout.setVerticalGroup(
            OverdueAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(OverdueAccountsLayout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addGroup(OverdueAccountsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OverdueAccountsReturnHomeButton)
                    .addComponent(OverdueAccountsPrintButton)))
        );

        jPanel3.add(OverdueAccounts, "card15");

        jLabel15.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Return a Book");
        jLabel15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel16.setText("Book Title:");

        jLabel17.setText("Book Authour:");

        jLabel18.setText("Book Publisher:");

        jLabel19.setText("Book Genre:");

        jLabel43.setText("Book Price:");

        jLabel44.setText("Person Name:");

        jLabel45.setText("Person Address:");

        jLabel46.setText("Person Email:");

        jLabel47.setText("Person Phone:");

        ReturnABookBuyOrRentBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "This book was purchased", "This book was rented" }));

        ReturnABookSubmitButton.setText("Submit");
        ReturnABookSubmitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnABookSubmitButtonActionPerformed(evt);
            }
        });

        ReturnABookReturnHomeButton.setText("Return Home");
        ReturnABookReturnHomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnABookReturnHomeButtonActionPerformed(evt);
            }
        });

        jLabel65.setText("Book Stock:");

        javax.swing.GroupLayout ReturnABookLayout = new javax.swing.GroupLayout(ReturnABook);
        ReturnABook.setLayout(ReturnABookLayout);
        ReturnABookLayout.setHorizontalGroup(
            ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(ReturnABookLayout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(ReturnABookSubmitButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(ReturnABookLayout.createSequentialGroup()
                        .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16)
                            .addComponent(ReturnABookBookTitleTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jLabel17)
                            .addComponent(jLabel18)
                            .addComponent(jLabel19)
                            .addComponent(jLabel43)
                            .addComponent(ReturnABookBookAuthourTextField)
                            .addComponent(ReturnABookBookPublisherTextField)
                            .addComponent(ReturnABookBookGenreTextField)
                            .addComponent(ReturnABookBookPriceTextField))
                        .addGap(94, 94, 94)
                        .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel47)
                            .addComponent(jLabel46)
                            .addComponent(jLabel45)
                            .addComponent(jLabel44)
                            .addComponent(ReturnABookPersonAddressTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(ReturnABookPersonEmailTextField)
                            .addComponent(ReturnABookPersonNameTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ReturnABookPersonPhoneTextField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(ReturnABookLayout.createSequentialGroup()
                                .addComponent(ReturnABookBookStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(ReturnABookBuyOrRentBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jLabel65))))
                .addGap(18, 18, 18)
                .addComponent(ReturnABookReturnHomeButton, javax.swing.GroupLayout.DEFAULT_SIZE, 104, Short.MAX_VALUE))
        );
        ReturnABookLayout.setVerticalGroup(
            ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(ReturnABookLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jLabel44))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnABookBookTitleTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnABookPersonNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jLabel45))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnABookBookAuthourTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnABookPersonAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel46))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnABookBookPublisherTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnABookPersonEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnABookBookGenreTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnABookPersonPhoneTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel43)
                    .addComponent(jLabel65))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnABookBookPriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnABookBuyOrRentBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ReturnABookBookStockTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addGroup(ReturnABookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnABookSubmitButton)
                    .addComponent(ReturnABookReturnHomeButton))
                .addContainerGap())
        );

        jPanel3.add(ReturnABook, "card16");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String nameStr = LoginNameTextField.getText(); //gets user input for username
        String idStr = LoginPasswordTextField.getText();  //gets user input for password
        int countcheck = 0;                     //countcheck set to 0

        if ("".equals(nameStr) || " ".equals(nameStr)) { //error checking, if the username field is empty
            JOptionPane.showMessageDialog(null,"Please enter your username"); //joptionpane to display message, asking user to enter student name
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(idStr) || " ".equals(idStr)) { //error checking, if the password field is empty
            JOptionPane.showMessageDialog(null,"Please enter your password"); //joptionpane to display message, asking user to enter student id
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if (!"".equals(nameStr) || " ".equals(nameStr)) { //error checking, if the username field is empty
            countcheck +=1;  //countcheck set to minus 1
        }

        if (!"".equals(idStr) || " ".equals(idStr)) { //error checking, if the password field is empty
            countcheck +=1;  //countcheck set to minus 1
        }
        
        if (DataHandler.CorrectUserLoginName().equals(nameStr) && !DataHandler.CorrectUserLoginPassword().equals(idStr) && countcheck==2) { //error checking, if the username field is empty
            JOptionPane.showMessageDialog(null,"Incorrect username and/or password, please try again"); //joptionpane to display message, asking user to enter student id
            countcheck = 2;  //countcheck set to minus 1
        }
        
        if (!DataHandler.CorrectUserLoginName().equals(nameStr) && DataHandler.CorrectUserLoginPassword().equals(idStr) && countcheck==2) { //error checking, if the username field is empty
            JOptionPane.showMessageDialog(null,"Incorrect username and/or password, please try again"); //joptionpane to display message, asking user to enter student id
            countcheck = 2;  //countcheck set to minus 1
        }
                
        if (!DataHandler.CorrectUserLoginName().equals(nameStr) && !DataHandler.CorrectUserLoginPassword().equals(idStr) && countcheck==2) { //error checking, if the username field is empty
            JOptionPane.showMessageDialog(null,"Incorrect username and/or password, please try again"); //joptionpane to display message, asking user to enter student id
            countcheck = 2;  //countcheck set to minus 1
        }
        
        if (DataHandler.CorrectUserLoginName().equals(nameStr) && DataHandler.CorrectUserLoginPassword().equals(idStr) && countcheck==2) { //error checking, if the username field is empty
            countcheck = 3;  //countcheck set to minus 1
        }

        if (countcheck==3){ //if the countcheck is zero
            //DataHandler.JDBCConnectGetQuestions(jLabel4,jLabel6,jLabel8,jLabel10,jLabel12,jLabel14,jLabel16,jLabel18,jLabel20,jLabel22); //gets questions to display on jlabel

            jPanel3.removeAll();   //remove jpanel
            jPanel3.repaint();
            jPanel3.revalidate();
            jPanel3.add(HomePage); //add the home page jpanel
            jPanel3.repaint();
            jPanel3.revalidate();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void LoginPasswordTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginPasswordTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginPasswordTextFieldActionPerformed

    private void LoginNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_LoginNameTextFieldActionPerformed

    private void ViewBooksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBooksButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(ListOfBooks);                     //add the list of books jpanel to the gui
        jPanel3.repaint();
        jPanel3.revalidate();
        String DisplayBooks = "Books";                //string named Books is used to find the Books table
        viewBooksTable.setModel(tableModel);
        tableModel.setDataVector(DataHandler.getRows(DisplayBooks), DataHandler.getTitles(DisplayBooks)); //functions are called from data handler to get the table information for the Books table in the database
    }//GEN-LAST:event_ViewBooksButtonActionPerformed

    private void ReturnHomeButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHomeButton1ActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //displays home page on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_ReturnHomeButton1ActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(Login);                           //brings the user back to the login page
        jPanel3.repaint();
        jPanel3.revalidate();
        LoginNameTextField.setText(""); //sets username text field to empty, this is done to prevent another user who does not know the login credentials from logging in
        LoginPasswordTextField.setText("");  //gets password text field to empty, this is done to prevent another user who does not know the login credentials from logging in
    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void AddABookSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddABookSubmitButtonActionPerformed
        // TODO add your handling code here:
        String bookTitleStr = AddABookBookTitleTextField.getText();     //gets user input for book title
        String bookAuthourStr = AddABookBookAuthourTextField.getText();   //gets user input for book authour
        String bookPublisherStr = AddABookBookPublisherTextField.getText(); //gets user input for book publisher
        String bookGenreStr = AddABookBookGenreTextField.getText();     //gets user input for book genre
        String bookPriceStr = AddABookBookPriceTextField.getText();     //gets user input for book price
        String bookStockStr = AddABookBookStockTextField.getText();     //gets user input for book stock
        int countcheck = 0;                              //countcheck variable set to 0
        
        if ("".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is empty
            JOptionPane.showMessageDialog(null,"Please enter a book title"); //joptionpane to display message, asking user to enter the book title
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is empty
            JOptionPane.showMessageDialog(null,"Please enter the authour of the book"); //joptionpane to display message, asking user to enter the book authour
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is empty
            JOptionPane.showMessageDialog(null,"Please enter the publisher of the book"); //joptionpane to display message, asking user to enter the book publisher
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is empty
            JOptionPane.showMessageDialog(null,"Please enter the genre of the book"); //joptionpane to display message, asking user to enter the book genre
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the price field is empty
            JOptionPane.showMessageDialog(null,"Please enter the price of the book"); //joptionpane to display message, asking user to enter the book price
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookStockStr) || " ".equals(bookStockStr)) { //error checking, if the password field is empty
            JOptionPane.showMessageDialog(null,"Please enter book stock"); //joptionpane to display message, asking user to enter student id
            countcheck = -1;  //countcheck set to minus 1
        }            
            
        int stockInt = 0; //creates an int variable for stock, set to 0
        try {
            stockInt = Integer.parseInt(bookStockStr); //parses the bookStockStr string value into the stockInt variable
        }
        catch (NumberFormatException e) {
             //Not an integer
             JOptionPane.showMessageDialog(null,"Book stock must be number");
             countcheck = -1; //countcheck set to minus 1
        }
        
        if (!"".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the book price field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (countcheck==5) {
            //call function here
            DataHandler.AddBook(bookTitleStr, bookAuthourStr, bookPublisherStr, bookGenreStr, bookPriceStr, stockInt); //addbook function, passes in variables to it and calls function
            JOptionPane.showMessageDialog(null,"Book added successfully!"); //joptionpane to display message, confirming that the user has successfully added a book to the db
        }
            
    }//GEN-LAST:event_AddABookSubmitButtonActionPerformed

    private void AddABookReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddABookReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                                //remove current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                              //adds the home page jpanel to the screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_AddABookReturnHomeButtonActionPerformed

    private void AddBooksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBooksButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(AddABook);                        //adds the AddABook jpanel to the screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_AddBooksButtonActionPerformed

    private void RemoveBooksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveBooksButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(RemoveABook);                     //selects the RemoveABook jpanel and puts it on the screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_RemoveBooksButtonActionPerformed

    private void RemoveABookSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveABookSubmitButtonActionPerformed
        // TODO add your handling code here:
        String bookTitleStr = RemoveABookBookTitleTextField.getText();     //gets user input for book title
        String bookAuthourStr = RemoveABookBookAddressTextField.getText();   //gets user input for book authour
        String bookPublisherStr = RemoveABookBookPublisherTextField.getText(); //gets user input for book publisher
        String bookGenreStr = RemoveABookBookGenreTextField.getText();     //gets user input for book genre
        String bookPriceStr = RemoveABookBookPriceTextField.getText();     //gets user input for book price
        String bookStockStr = RemoveABookBookStockTextField.getText();     //gets user input for book stock
        int countcheck = 0;                              //countcheck variable set to 0
        
        if ("".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is empty
            JOptionPane.showMessageDialog(null,"Please enter a book title"); //joptionpane to display message, asking user to enter the book title
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is empty
            JOptionPane.showMessageDialog(null,"Please enter the authour of the book"); //joptionpane to display message, asking user to enter the book authour
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is empty
            JOptionPane.showMessageDialog(null,"Please enter the publisher of the book"); //joptionpane to display message, asking user to enter the book publisher
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is empty
            JOptionPane.showMessageDialog(null,"Please enter the genre of the book"); //joptionpane to display message, asking user to enter the book genre
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the price field is empty
            JOptionPane.showMessageDialog(null,"Please enter the price of the book"); //joptionpane to display message, asking user to enter the book price
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookStockStr) || " ".equals(bookStockStr)) { //error checking, if the password field is empty
            JOptionPane.showMessageDialog(null,"Please enter book stock"); //joptionpane to display message, asking user to enter student id
            countcheck = -1;  //countcheck set to minus 1
        }            
            
        int stockInt = 0; //creates an int variable for stock, set to 0
        try {
            stockInt = Integer.parseInt(bookStockStr); //parses the bookStockStr string value into the stockInt variable
        }
        catch (NumberFormatException e) {
             //Not an integer
             JOptionPane.showMessageDialog(null,"Book stock must be number");
             countcheck = -1; //countcheck set to minus 1
        }
        
        if (!"".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the book price field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (countcheck==5) {
            //call function here
            DataHandler.RemoveBook(bookTitleStr, bookAuthourStr, bookPublisherStr, bookGenreStr, bookPriceStr, stockInt);
            //JOptionPane.showMessageDialog(null,"Book removed successfully!"); //joptionpane to display message, confirming that the user has successfully added a book to the db
        }
    }//GEN-LAST:event_RemoveABookSubmitButtonActionPerformed

    private void RemoveABookReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveABookReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //selects the HomePage jpanel and puts it on the screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_RemoveABookReturnHomeButtonActionPerformed

    private void IssueBooksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueBooksButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(IssueABook);                      //selects the IssueABook jpanel, displays it on GUI
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_IssueBooksButtonActionPerformed

    private void IssueABookSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueABookSubmitButtonActionPerformed
        // TODO add your handling code here:
        String bookTitleStr = IssueABookBookTitleTextField.getText();     //gets user input for book title
        String bookAuthourStr = IssueABookBookAuthourTextField.getText();   //gets user input for book authour
        String bookPublisherStr = IssueABookBookPublisherTextField.getText(); //gets user input for book publisher
        String bookGenreStr = IssueABookBookGenreTextField.getText();     //gets user input for book genre
        String bookPriceStr = IssueABookBookPriceTextField.getText();     //gets user input for book price
        String bookStockStr = IssueABookBookStockTextField.getText();     //gets user input for book stock
        String personNameStr = IssueABookPersonNameTextField.getText();     //gets user input for person name
        String personAddressStr = IssueABookPersonAddressTextField.getText();     //gets user input for person address
        String personEmailStr = IssueABookPersonEmailTextField.getText();     //gets user input for person email
        String personPhoneStr = IssueABookPersonPhoneTextField.getText();     //gets user input for person phone
        int countcheck = 0;                              //countcheck variable set to 0
        int buyOrRent = IssueABookBuyOrRentBox.getSelectedIndex(); //finds the index of the combo box to determine whether or not the user wants to buy or rent a book
        //System.out.println("Selected: " + buyOrRent);
        //if (buyOrRent==1) {
            //System.out.println("Selected: " + buyOrRent);
        //}
        
        if ("".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is empty
            JOptionPane.showMessageDialog(null,"Please enter a book title"); //joptionpane to display message, asking user to enter the book title
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is empty
            JOptionPane.showMessageDialog(null,"Please enter the authour of the book"); //joptionpane to display message, asking user to enter the book authour
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is empty
            JOptionPane.showMessageDialog(null,"Please enter the publisher of the book"); //joptionpane to display message, asking user to enter the book publisher
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is empty
            JOptionPane.showMessageDialog(null,"Please enter the genre of the book"); //joptionpane to display message, asking user to enter the book genre
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the price field is empty
            JOptionPane.showMessageDialog(null,"Please enter the price of the book"); //joptionpane to display message, asking user to enter the book price
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(personNameStr) || " ".equals(personNameStr)) { //error checking, if the person name field is empty
            JOptionPane.showMessageDialog(null,"Please enter the name of the person"); //joptionpane to display message, asking user to enter the person name
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(personAddressStr) || " ".equals(personAddressStr)) { //error checking, if the person address field is empty
            JOptionPane.showMessageDialog(null,"Please enter the address of the person"); //joptionpane to display message, asking user to enter the person address
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(personEmailStr) || " ".equals(personEmailStr)) { //error checking, if the person email field is empty
            JOptionPane.showMessageDialog(null,"Please enter the email of the person"); //joptionpane to display message, asking user to enter the person email
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(personPhoneStr) || " ".equals(personPhoneStr)) { //error checking, if the person phone field is empty
            JOptionPane.showMessageDialog(null,"Please enter the phone number of the person"); //joptionpane to display message, asking user to enter the person phone
            countcheck = -1;  //countcheck set to minus 1
        }
        
        int stockInt = 0; //creates an int variable for stock, set to 0
        try {
            stockInt = Integer.parseInt(bookStockStr); //parses the bookStockStr string value into the stockInt variable
        }
        catch (NumberFormatException e) {
             //Not an integer
             JOptionPane.showMessageDialog(null,"Book stock must be number");
             countcheck = -1; //countcheck set to minus 1
        }
        
        if (!"".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the book price field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(personNameStr) || " ".equals(personNameStr)) { //error checking, if the person name field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(personAddressStr) || " ".equals(personAddressStr)) { //error checking, if the person address field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(personEmailStr) || " ".equals(personEmailStr)) { //error checking, if the person email field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(personPhoneStr) || " ".equals(personPhoneStr)) { //error checking, if the person phone field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (countcheck==9 && buyOrRent==0) { //for buy
            //call function here
            DataHandler.IssueBookForBuy(bookTitleStr, bookAuthourStr, bookPublisherStr, bookGenreStr, bookPriceStr, stockInt, personNameStr, personAddressStr, personEmailStr, personPhoneStr); //calls the IssueBookForBuy function from the data handler, passes in variables to it
            //JOptionPane.showMessageDialog(null, bookTitleStr + " issued successfully to " + personNameStr); //joptionpane to display message, confirming that the user has successfully added a book to the db
        }
        
        if (countcheck==9 && buyOrRent==1) { //for rent
            //call function here
            DataHandler.IssueBookForRent(bookTitleStr, bookAuthourStr, bookPublisherStr, bookGenreStr, bookPriceStr, stockInt, personNameStr, personAddressStr, personEmailStr, personPhoneStr); //calls the IssueBookForRent function from the data handler, passes in variables to it
            //JOptionPane.showMessageDialog(null, bookTitleStr + " issued successfully to " + personNameStr); //joptionpane to display message, confirming that the user has successfully added a book to the db
        }
    }//GEN-LAST:event_IssueABookSubmitButtonActionPerformed

    private void IssueABookReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueABookReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //selects the HomePage jpanel to put on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_IssueABookReturnHomeButtonActionPerformed

    private void IssuedBooksReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssuedBooksReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(IssueABook);                      //selects the IssueABook jpanel to put on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_IssuedBooksReturnHomeButtonActionPerformed

    private void IssueABookIssuedBooksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueABookIssuedBooksButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(IssuedBooks);                     //selects the IssuedBooks jpanel, puts it on screen
        jPanel3.repaint();
        jPanel3.revalidate();
        String DisplayBooks = "BooksIssued";          //string named BooksIssued used for finding BooksIssued table from database
        viewIssuedBooksTable.setModel(tableModel);
        tableModel.setDataVector(DataHandler.getRows(DisplayBooks), DataHandler.getTitles(DisplayBooks)); //searches and finds BooksIssued table from database, displays it on the viewBooksIssuedTable table
    }//GEN-LAST:event_IssueABookIssuedBooksButtonActionPerformed

    private void IssueABookBuyOrRentBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssueABookBuyOrRentBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IssueABookBuyOrRentBoxActionPerformed

    private void RemoveUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveUsersButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(RemoveAUser);                     //selects the RemoveAUser jpanel, displays it on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_RemoveUsersButtonActionPerformed

    private void OverdueAccountsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OverdueAccountsButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(OverdueAccounts);                 //selects the OverdueAccounts jpanel, displays it on GUI
        jPanel3.repaint();
        jPanel3.revalidate();
        String OverdueAccounts = "BooksIssued";       //string named BooksIssued used for finding BooksIssued table from database
        viewOverdueAccountsTable.setModel(tableModel);
        tableModel.setDataVector(DataHandler.getRowsForOverdueAccounts(OverdueAccounts), DataHandler.getTitles(OverdueAccounts)); //searches and finds BooksIssued table from database, displays it on the viewBooksIssuedTable table. Notice it is using getRowsForOverdueAccounts, unlike the others. This is because this function performs a special filter query to find users who have not returned their rented book within a week
    }//GEN-LAST:event_OverdueAccountsButtonActionPerformed

    private void OverdueAccountsReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OverdueAccountsReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //selects the HomePage jpanel, displays it on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_OverdueAccountsReturnHomeButtonActionPerformed

    private void ReturnBooksButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnBooksButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(ReturnABook);                     //selects the ReturnABook jpanel, displays it on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_ReturnBooksButtonActionPerformed

    private void ReturnABookReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnABookReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //selects the HomePage jpanel, displays it on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_ReturnABookReturnHomeButtonActionPerformed

    private void ReturnABookSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnABookSubmitButtonActionPerformed
        // TODO add your handling code here:
        String bookTitleStr = ReturnABookBookTitleTextField.getText();     //gets user input for book title
        String bookAuthourStr = ReturnABookBookAuthourTextField.getText();   //gets user input for book authour
        String bookPublisherStr = ReturnABookBookPublisherTextField.getText(); //gets user input for book publisher
        String bookGenreStr = ReturnABookBookGenreTextField.getText();     //gets user input for book genre
        String bookPriceStr = ReturnABookBookPriceTextField.getText();     //gets user input for book price
        String bookStockStr = ReturnABookBookStockTextField.getText();     //gets user input for book stock
        String personNameStr = ReturnABookPersonNameTextField.getText();     //gets user input for person name
        String personAddressStr = ReturnABookPersonAddressTextField.getText();     //gets user input for person address
        String personEmailStr = ReturnABookPersonEmailTextField.getText();     //gets user input for person email
        String personPhoneStr = ReturnABookPersonPhoneTextField.getText();     //gets user input for person phone
        int countcheck = 0;                              //countcheck variable set to 0
        int buyOrRent = ReturnABookBuyOrRentBox.getSelectedIndex(); //finds the index of the combo box to determine whether or not the user wants to buy or rent a book
        //System.out.println("Selected: " + buyOrRent);
        //if (buyOrRent==1) {
            //System.out.println("Selected: " + buyOrRent);
        //}
        
        if ("".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is empty
            JOptionPane.showMessageDialog(null,"Please enter a book title"); //joptionpane to display message, asking user to enter the book title
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is empty
            JOptionPane.showMessageDialog(null,"Please enter the authour of the book"); //joptionpane to display message, asking user to enter the book authour
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is empty
            JOptionPane.showMessageDialog(null,"Please enter the publisher of the book"); //joptionpane to display message, asking user to enter the book publisher
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is empty
            JOptionPane.showMessageDialog(null,"Please enter the genre of the book"); //joptionpane to display message, asking user to enter the book genre
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the price field is empty
            JOptionPane.showMessageDialog(null,"Please enter the price of the book"); //joptionpane to display message, asking user to enter the book price
            countcheck = -1;  //countcheck set to minus 1
        }
        
        int stockInt = 0; //creates an int variable for stock, set to 0
            try {
                stockInt = Integer.parseInt(bookStockStr); //parses the bookStockStr string value into the stockInt variable
            }
            catch (NumberFormatException e) {
                //Not an integer
                JOptionPane.showMessageDialog(null,"Book stock must be number");
                countcheck = -1; //countcheck set to minus 1
            }
        
        if ("".equals(personNameStr) || " ".equals(personNameStr)) { //error checking, if the person name field is empty
            JOptionPane.showMessageDialog(null,"Please enter the name of the person"); //joptionpane to display message, asking user to enter the person name
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(personAddressStr) || " ".equals(personAddressStr)) { //error checking, if the person address field is empty
            JOptionPane.showMessageDialog(null,"Please enter the address of the person"); //joptionpane to display message, asking user to enter the person address
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(personEmailStr) || " ".equals(personEmailStr)) { //error checking, if the person email field is empty
            JOptionPane.showMessageDialog(null,"Please enter the email of the person"); //joptionpane to display message, asking user to enter the person email
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if ("".equals(personPhoneStr) || " ".equals(personPhoneStr)) { //error checking, if the person phone is empty
            JOptionPane.showMessageDialog(null,"Please enter the phone number of the person"); //joptionpane to display message, asking user to enter the person phone
            countcheck = -1;  //countcheck set to minus 1
        }
        
        if (!"".equals(bookTitleStr) || " ".equals(bookTitleStr)) { //error checking, if the book title field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookAuthourStr) || " ".equals(bookAuthourStr)) { //error checking, if the book authour field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPublisherStr) || " ".equals(bookPublisherStr)) { //error checking, if the book publisher field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(bookGenreStr) || " ".equals(bookGenreStr)) { //error checking, if the book genre field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(bookPriceStr) || " ".equals(bookPriceStr)) { //error checking, if the book price field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(personNameStr) || " ".equals(personNameStr)) { //error checking, if the person name field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(personAddressStr) || " ".equals(personAddressStr)) { //error checking, if the person address field is not empty
            countcheck +=1;  //countcheck increments by 1
        }

        if (!"".equals(personEmailStr) || " ".equals(personEmailStr)) { //error checking, if the person email field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (!"".equals(personPhoneStr) || " ".equals(personPhoneStr)) { //error checking, if the person phone field is not empty
            countcheck +=1;  //countcheck increments by 1
        }
        
        if (countcheck==9 && buyOrRent==0) { //for buy
            //call function here
            DataHandler.ReturnBoughtBook(bookTitleStr, bookAuthourStr, bookPublisherStr, bookGenreStr, bookPriceStr, stockInt, personNameStr, personAddressStr, personEmailStr, personPhoneStr); //calls the ReturnBoughtBook function from the data handler, passes in variables to it
            //JOptionPane.showMessageDialog(null, bookTitleStr + " issued successfully to " + personNameStr); //joptionpane to display message, confirming that the user has successfully added a book to the db
        }
        
        if (countcheck==9 && buyOrRent==1) { //for rent
            //call function here
            DataHandler.ReturnRentedBook(bookTitleStr, bookAuthourStr, bookPublisherStr, bookGenreStr, bookPriceStr, stockInt, personNameStr, personAddressStr, personEmailStr, personPhoneStr); //calls the ReturnRentedBook function from the data handler, passes in variables to it
            //JOptionPane.showMessageDialog(null, bookTitleStr + " issued successfully to " + personNameStr); //joptionpane to display message, confirming that the user has successfully added a book to the db
        }
    }//GEN-LAST:event_ReturnABookSubmitButtonActionPerformed

    private void PrintButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PrintButton1ActionPerformed
        try {
            // TODO add your handling code here:
            Boolean printTable = viewBooksTable.print(); //prints viewBooksTable to a printer, pdf, etc
        if (printTable) {
            JOptionPane.showMessageDialog(null, "Printing is done"); //confirms that printing is complete
        }
        } catch (PrinterException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_PrintButton1ActionPerformed

    private void IssuedBooksPrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IssuedBooksPrintButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Boolean printTable = viewIssuedBooksTable.print(); //prints viewIssuedBooksTable to a printer, pdf, etc
        if (printTable) {
            JOptionPane.showMessageDialog(null, "Printing is done"); //confirms that printing is complete
        }
        } catch (PrinterException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_IssuedBooksPrintButtonActionPerformed

    private void OverdueAccountsPrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OverdueAccountsPrintButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Boolean printTable = viewOverdueAccountsTable.print(); //prints viewOverdueAccountsTable to a printer, pdf, etc
        if (printTable) {
            JOptionPane.showMessageDialog(null, "Printing is done"); //confirms that printing is complete
        }
        } catch (PrinterException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_OverdueAccountsPrintButtonActionPerformed

    private void ListOfUsersReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListOfUsersReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //selects the HomePage jpanel and displays it on GUI
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_ListOfUsersReturnHomeButtonActionPerformed

    private void ListOfUsersPrintButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ListOfUsersPrintButtonActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Boolean printTable = viewUsersTable.print(); //prints viewUsersTable to a printer, pdf, etc
            if (printTable) {
                JOptionPane.showMessageDialog(null, "Printing is done"); //confirms that printing is complete
            }
        } catch (PrinterException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ListOfUsersPrintButtonActionPerformed

    private void ViewUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewUsersButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(ListOfUsers);                     //selects the ListOfUsers jpanel and displays it on GUI
        jPanel3.repaint();
        jPanel3.revalidate();
        String DisplayUsers = "Users";                //string named DisplayUsers used for finding Users table from database
        viewUsersTable.setModel(tableModel);
        tableModel.setDataVector(DataHandler.getRows(DisplayUsers), DataHandler.getTitles(DisplayUsers)); //searches and finds Users table from database, displays it on the viewUsersTable table
    }//GEN-LAST:event_ViewUsersButtonActionPerformed

    private void AddAUserSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAUserSubmitButtonActionPerformed
        // TODO add your handling code here:
        //String useridStr = UserId.getText(); //gets user input for username
        String userNameStr = AddAUserUserNameTextField.getText();  //gets user input for username
        String userAddressStr = AddAUserUserAddressTextField.getText(); //gets user input for address
        String userEmailStr = AddAUserUserEmailTextField.getText();  //gets user input for email
        String userPhoneStr = AddAUserUserPhoneTextField.getText(); //gets user input for phone

        int countcheck = 0;                     //countcheck set to 0

        if ("".equals(userNameStr) || " ".equals(userNameStr)) { //error checking, if the username field is empty
            JOptionPane.showMessageDialog(null,"Please enter a user name"); //joptionpane to display message, asking user to enter username
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(userAddressStr) || " ".equals(userAddressStr)) { //error checking, if the address field is empty
            JOptionPane.showMessageDialog(null,"Please enter a user address"); //joptionpane to display message, asking user to enter address
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(userEmailStr) || " ".equals(userEmailStr)) { //error checking, if the email field is empty
            JOptionPane.showMessageDialog(null,"Please enter a user email"); //joptionpane to display message, asking user to enter email
            countcheck = -1;  //countcheck set to minus 1
        }

        if ("".equals(userPhoneStr) || " ".equals(userPhoneStr)) { //error checking, if the phone field is empty
            JOptionPane.showMessageDialog(null,"Please enter a user phone number"); //joptionpane to display message, asking user to enter phone
            countcheck = -1;  //countcheck set to minus 1
        }

        /*try {
            Integer.parseInt(ageStr);
        }
        catch (NumberFormatException e) {
            //Not an integer
            JOptionPane.showMessageDialog(null,"Age must be number");
            countcheck = -1;
        }*/

        if (!"".equals(userNameStr) || " ".equals(userNameStr)) { //error checking, if the name field is empty
            countcheck +=1;  //countcheck set to minus 1
        }

        if (!"".equals(userAddressStr) || " ".equals(userAddressStr)) { //error checking, if the address field is empty
            countcheck +=1;  //countcheck set to minus 1
        }

        if (!"".equals(userEmailStr) || " ".equals(userEmailStr)) { //error checking, if the email field is empty
            countcheck +=1;  //countcheck set to minus 1
        }

        if (!"".equals(userPhoneStr) || " ".equals(userPhoneStr)) { //error checking, if the phone field is empty
            countcheck +=1;  //countcheck set to minus 1
        }

        //l.getAdmin(Username.getText()
            if (countcheck==4){
                /*JOptionPane.showMessageDialog(null,"Added User " + userNameStr);
                try {
                    //if the countcheck is zero

                    int done =DCC.update("INSERT INTO Users (UserName, UserAddress, UserEmail, UserPhone) VALUES ('"+userNameStr+"', '"+userAddressStr+"', '"+userEmailStr+"', '"+userPhoneStr+"')");

                    jPanel3.removeAll();   //remove jpanel
                    jPanel3.repaint();
                    jPanel3.revalidate();
                    jPanel3.add(HomePage);
                    jPanel3.repaint();
                    jPanel3.revalidate();
                } catch (SQLException ex) {
                    Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }*/
                
                            //call function here
            DataHandler.AddUser(userNameStr, userAddressStr, userEmailStr, userPhoneStr); //Calls AddUser function from DataHandler and passes variables into it
            JOptionPane.showMessageDialog(null,"User added successfully!"); //joptionpane to display message, confirming that the user has successfully added a user to the db
            }

    }//GEN-LAST:event_AddAUserSubmitButtonActionPerformed

    private void AddAUserReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddAUserReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //selects the HomePage jpanel and puts it on GUI
        jPanel3.repaint();
        jPanel3.revalidate();

    }//GEN-LAST:event_AddAUserReturnHomeButtonActionPerformed

    private void RemoveAUserSubmitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveAUserSubmitButtonActionPerformed
            // TODO add your handling code here:
            String userNameStr = RemoveAUserUserNameTextField.getText();  //gets user input for name
            String userAddressStr = RemoveAUserUserAddressTextField.getText(); //gets user input for address
            String userEmailStr = RemoveAUserUserEmailTextField.getText();  //gets user input for email
            String userPhoneStr = RemoveAUserUserPhoneTextField.getText(); //gets user input for phone

            int countcheck = 0;                     //countcheck set to 0

            if ("".equals(userNameStr) || " ".equals(userNameStr)) { //error checking, if the username field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user name"); //joptionpane to display message, asking user to enter username
                countcheck = -1;  //countcheck set to minus 1
            }

            if ("".equals(userAddressStr) || " ".equals(userAddressStr)) { //error checking, if the address field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user address"); //joptionpane to display message, asking user to enter address
                countcheck = -1;  //countcheck set to minus 1
            }

            if ("".equals(userEmailStr) || " ".equals(userEmailStr)) { //error checking, if the email field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user email"); //joptionpane to display message, asking user to enter email
                countcheck = -1;  //countcheck set to minus 1
            }

            if ("".equals(userPhoneStr) || " ".equals(userPhoneStr)) { //error checking, if the phone field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user phone number"); //joptionpane to display message, asking user to enter phone
                countcheck = -1;  //countcheck set to minus 1
            }

            /*int ageInt = 0;
            try {
                ageInt = Integer.parseInt(ageStr);
            }
            catch (NumberFormatException e) {
                //Not an integer
                JOptionPane.showMessageDialog(null,"Age must be number");
                countcheck = -1;
            }*/

            if (!"".equals(userNameStr) || " ".equals(userNameStr)) { //error checking, if the name field is empty
                countcheck +=1;  //countcheck set to minus 1
            }

            if (!"".equals(userAddressStr) || " ".equals(userAddressStr)) { //error checking, if the address field is empty
                countcheck +=1;  //countcheck set to minus 1
            }

            if (!"".equals(userEmailStr) || " ".equals(userEmailStr)) { //error checking, if the email field is empty
                countcheck +=1;  //countcheck set to minus 1
            }

            if (!"".equals(userPhoneStr) || " ".equals(userPhoneStr)) { //error checking, if the phone field is empty
                countcheck +=1;  //countcheck set to minus 1
            }

            if (countcheck==4){
            DataHandler.RemoveUser(userNameStr, userAddressStr, userEmailStr, userPhoneStr); //calls the RemoveUser function from the DataHandler, passes variables into the function
            //JOptionPane.showMessageDialog(null,"User removed successfully!"); //joptionpane to display message, confirming that the user has successfully added a book to the db
            }

    }//GEN-LAST:event_RemoveAUserSubmitButtonActionPerformed

    private void RemoveAUserReturnHomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveAUserReturnHomeButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                        //selects the HomePage jpanel and displays it on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_RemoveAUserReturnHomeButtonActionPerformed

    private void AddUsersButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUsersButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //removes current jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(AddAUser);                        //selects the AddAUser jpanel and displays it on screen
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_AddUsersButtonActionPerformed

    //necessary public variables to be used for remainder of code
    /*public double marks = 0;
    public int counting = 0;
    public int counterer = 0;
    public int tries = 0;
    public int count1 = 0;
    public int count2 = 0;
    public int count3 = 0;
    public int count4 = 0;
    public int count5 = 0;
    public int count6 = 0;
    public int count7 = 0;
    public int count8 = 0;
    public int count9 = 0;
    public int count10 = 0;
    public int count11 = 0;
    public int countcheckem = 0;*/
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) { //the main function
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SampleJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddABook;
    private javax.swing.JTextField AddABookBookAuthourTextField;
    private javax.swing.JTextField AddABookBookGenreTextField;
    private javax.swing.JTextField AddABookBookPriceTextField;
    private javax.swing.JTextField AddABookBookPublisherTextField;
    private javax.swing.JTextField AddABookBookStockTextField;
    private javax.swing.JTextField AddABookBookTitleTextField;
    private javax.swing.JButton AddABookReturnHomeButton;
    private javax.swing.JButton AddABookSubmitButton;
    private javax.swing.JPanel AddAUser;
    private javax.swing.JButton AddAUserReturnHomeButton;
    private javax.swing.JButton AddAUserSubmitButton;
    private javax.swing.JTextField AddAUserUserAddressTextField;
    private javax.swing.JTextField AddAUserUserEmailTextField;
    private javax.swing.JTextField AddAUserUserNameTextField;
    private javax.swing.JTextField AddAUserUserPhoneTextField;
    private javax.swing.JButton AddBooksButton;
    private javax.swing.JButton AddUsersButton;
    private javax.swing.JPanel HomePage;
    private javax.swing.JPanel IssueABook;
    private javax.swing.JTextField IssueABookBookAuthourTextField;
    private javax.swing.JTextField IssueABookBookGenreTextField;
    private javax.swing.JTextField IssueABookBookPriceTextField;
    private javax.swing.JTextField IssueABookBookPublisherTextField;
    private javax.swing.JTextField IssueABookBookStockTextField;
    private javax.swing.JTextField IssueABookBookTitleTextField;
    private javax.swing.JComboBox<String> IssueABookBuyOrRentBox;
    private javax.swing.JButton IssueABookIssuedBooksButton;
    private javax.swing.JTextField IssueABookPersonAddressTextField;
    private javax.swing.JTextField IssueABookPersonEmailTextField;
    private javax.swing.JTextField IssueABookPersonNameTextField;
    private javax.swing.JTextField IssueABookPersonPhoneTextField;
    private javax.swing.JButton IssueABookReturnHomeButton;
    private javax.swing.JButton IssueABookSubmitButton;
    private javax.swing.JButton IssueBooksButton;
    private javax.swing.JPanel IssuedBooks;
    private javax.swing.JButton IssuedBooksPrintButton;
    private javax.swing.JButton IssuedBooksReturnHomeButton;
    private javax.swing.JPanel ListOfBooks;
    private javax.swing.JPanel ListOfUsers;
    private javax.swing.JButton ListOfUsersPrintButton;
    private javax.swing.JButton ListOfUsersReturnHomeButton;
    private javax.swing.JPanel Login;
    private javax.swing.JTextField LoginNameTextField;
    private javax.swing.JTextField LoginPasswordTextField;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JPanel OverdueAccounts;
    private javax.swing.JButton OverdueAccountsButton;
    private javax.swing.JButton OverdueAccountsPrintButton;
    private javax.swing.JButton OverdueAccountsReturnHomeButton;
    private javax.swing.JButton PrintButton1;
    private javax.swing.JPanel RemoveABook;
    private javax.swing.JTextField RemoveABookBookAddressTextField;
    private javax.swing.JTextField RemoveABookBookGenreTextField;
    private javax.swing.JTextField RemoveABookBookPriceTextField;
    private javax.swing.JTextField RemoveABookBookPublisherTextField;
    private javax.swing.JTextField RemoveABookBookStockTextField;
    private javax.swing.JTextField RemoveABookBookTitleTextField;
    private javax.swing.JButton RemoveABookReturnHomeButton;
    private javax.swing.JButton RemoveABookSubmitButton;
    private javax.swing.JPanel RemoveAUser;
    private javax.swing.JButton RemoveAUserReturnHomeButton;
    private javax.swing.JButton RemoveAUserSubmitButton;
    private javax.swing.JTextField RemoveAUserUserAddressTextField;
    private javax.swing.JTextField RemoveAUserUserEmailTextField;
    private javax.swing.JTextField RemoveAUserUserNameTextField;
    private javax.swing.JTextField RemoveAUserUserPhoneTextField;
    private javax.swing.JButton RemoveBooksButton;
    private javax.swing.JButton RemoveUsersButton;
    private javax.swing.JPanel ReturnABook;
    private javax.swing.JTextField ReturnABookBookAuthourTextField;
    private javax.swing.JTextField ReturnABookBookGenreTextField;
    private javax.swing.JTextField ReturnABookBookPriceTextField;
    private javax.swing.JTextField ReturnABookBookPublisherTextField;
    private javax.swing.JTextField ReturnABookBookStockTextField;
    private javax.swing.JTextField ReturnABookBookTitleTextField;
    private javax.swing.JComboBox<String> ReturnABookBuyOrRentBox;
    private javax.swing.JTextField ReturnABookPersonAddressTextField;
    private javax.swing.JTextField ReturnABookPersonEmailTextField;
    private javax.swing.JTextField ReturnABookPersonNameTextField;
    private javax.swing.JTextField ReturnABookPersonPhoneTextField;
    private javax.swing.JButton ReturnABookReturnHomeButton;
    private javax.swing.JButton ReturnABookSubmitButton;
    private javax.swing.JButton ReturnBooksButton;
    private javax.swing.JButton ReturnHomeButton1;
    private javax.swing.JButton ViewBooksButton;
    private javax.swing.JButton ViewUsersButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable viewBooksTable;
    private javax.swing.JTable viewIssuedBooksTable;
    private javax.swing.JTable viewOverdueAccountsTable;
    private javax.swing.JTable viewUsersTable;
    // End of variables declaration//GEN-END:variables
    private javax.swing.table.DefaultTableModel tableModel;
}
