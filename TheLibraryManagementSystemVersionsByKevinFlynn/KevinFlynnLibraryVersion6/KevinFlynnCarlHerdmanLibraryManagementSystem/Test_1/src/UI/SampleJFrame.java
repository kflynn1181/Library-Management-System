package UI;

//Code created by Kevin Flynn C18502203
//Code orginally submitted on 27th March
//Updated code submitted on 3rd April


//import the necessary modules
import Main.DatabaseConnecter;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.ResultSetMetaData;
import javax.swing.JOptionPane;
import java.util.Random;
import java.util.Collections;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import org.apache.commons.lang3.ArrayUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author C18502203
 */
public class SampleJFrame extends javax.swing.JFrame {
    
    DatabaseConnecter DCC;

    /**
     * Creates new form SampleJFrame
     */
    public SampleJFrame() throws SQLException, ClassNotFoundException {
        //tableModel = new javax.swing.table.DefaultTableModel();
        initComponents();
        //viewBooksTable.setModel(DbUtils.resultSetToTableMode1());
        DefaultTableModel model = new DefaultTableModel(); 
        JTable table = new JTable(tableModel); 
        DCC=new DatabaseConnecter("Library.accdb");
    }
    

    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        Login = new javax.swing.JPanel();
        Username = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        Password = new javax.swing.JTextField();
        LoginButton = new javax.swing.JButton();
        jLabel26 = new javax.swing.JLabel();
        HomePage = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        ViewBookButton = new javax.swing.JButton();
        AddBookButton = new javax.swing.JButton();
        RemoveBookButton = new javax.swing.JButton();
        ViewUserButton = new javax.swing.JButton();
        AddUserButton = new javax.swing.JButton();
        RemoveUserButton = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        LogoutButton = new javax.swing.JButton();
        jButton20 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        BookTable = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        viewBooksTable = new javax.swing.JTable();
        ReturnHome = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        AddBook = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        BookTitle = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        BookAuthour = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        BookPublisher = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        BookGenre = new javax.swing.JTextField();
        SubmitBook = new javax.swing.JButton();
        jLabel29 = new javax.swing.JLabel();
        BookPrice = new javax.swing.JTextField();
        ReturnHome4 = new javax.swing.JButton();
        BookStock = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        RemoveBook = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        BookTitleRemove = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        BookAuthourRemove = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        BookPublisherRemove = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        BookGenreRemove = new javax.swing.JTextField();
        SubmitRemoveBook = new javax.swing.JButton();
        jLabel45 = new javax.swing.JLabel();
        BookPriceRemove = new javax.swing.JTextField();
        ReturnHome5 = new javax.swing.JButton();
        BookStockRemove = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        UserTable = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        viewUsersTable = new javax.swing.JTable();
        ReturnHome1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        AddUser = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        UserNameField = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        UserAddressField = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        UserEmailField = new javax.swing.JTextField();
        SubmitUser = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        UserPhoneField = new javax.swing.JTextField();
        ReturnHome2 = new javax.swing.JButton();
        RemoveUser = new javax.swing.JPanel();
        jLabel36 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        UserNameFieldRemove = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        UserAddressFieldRemove = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        UserEmailFieldRemove = new javax.swing.JTextField();
        SubmitRemoveUser = new javax.swing.JButton();
        jLabel44 = new javax.swing.JLabel();
        UserPhoneFieldRemove = new javax.swing.JTextField();
        ReturnHome3 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jButton8.setText("jButton8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel3.setLayout(new java.awt.CardLayout());

        Login.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Bauhaus 93", 0, 20)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Login Page");
        jLabel1.setAlignmentX(0.5F);
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jLabel2.setText("Username:");

        jLabel24.setText("Password:");

        Password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordActionPerformed(evt);
            }
        });

        LoginButton.setText("Login");
        LoginButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LoginButtonActionPerformed(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel26.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel26.setText("<html><u>Library Management System</u></html>");

        javax.swing.GroupLayout LoginLayout = new javax.swing.GroupLayout(Login);
        Login.setLayout(LoginLayout);
        LoginLayout.setHorizontalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(LoginLayout.createSequentialGroup()
                .addGap(353, 353, 353)
                .addGroup(LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Password)
                    .addComponent(Username)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(LoginButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(353, Short.MAX_VALUE))
        );
        LoginLayout.setVerticalGroup(
            LoginLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, LoginLayout.createSequentialGroup()
                .addContainerGap(63, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Username, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel24)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(LoginButton)
                .addGap(64, 64, 64))
        );

        jPanel3.add(Login, "card9");

        jLabel27.setFont(new java.awt.Font("Bauhaus 93", 0, 36)); // NOI18N
        jLabel27.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel27.setText("Library Management System");
        jLabel27.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel28.setFont(new java.awt.Font("Bauhaus 93", 0, 12)); // NOI18N
        jLabel28.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel28.setText("Updated: 21st April, 2022");
        jLabel28.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        ViewBookButton.setText("View Books");
        ViewBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBookButtonActionPerformed(evt);
            }
        });

        AddBookButton.setText("Add Books");
        AddBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddBookButtonActionPerformed(evt);
            }
        });

        RemoveBookButton.setText("Remove Books");
        RemoveBookButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveBookButtonActionPerformed(evt);
            }
        });

        ViewUserButton.setText("View Users");
        ViewUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewUserButtonActionPerformed(evt);
            }
        });

        AddUserButton.setText("Add Users");
        AddUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddUserButtonActionPerformed(evt);
            }
        });

        RemoveUserButton.setText("Remove Users");
        RemoveUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RemoveUserButtonActionPerformed(evt);
            }
        });

        jButton14.setText("Check Accounts");

        LogoutButton.setText("Logout");
        LogoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                LogoutButtonActionPerformed(evt);
            }
        });

        jButton20.setText("Issue Books");

        jButton22.setText("Return Books");

        javax.swing.GroupLayout HomePageLayout = new javax.swing.GroupLayout(HomePage);
        HomePage.setLayout(HomePageLayout);
        HomePageLayout.setHorizontalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(HomePageLayout.createSequentialGroup()
                .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, 583, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 248, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(LogoutButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, HomePageLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(ViewUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ViewBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AddBookButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(AddUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(RemoveBookButton, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(RemoveUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        HomePageLayout.setVerticalGroup(
            HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(HomePageLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel28, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(39, 39, 39)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(ViewBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(AddBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(RemoveBookButton, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(HomePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                    .addComponent(RemoveUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(AddUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ViewUserButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addComponent(LogoutButton, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel3.add(HomePage, "card9");

        jLabel4.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("List of Books");
        jLabel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        viewBooksTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title", "Author", "Publisher", "Genre", "Price", "Stock"
            }
        ));
        jScrollPane2.setViewportView(viewBooksTable);
        if (viewBooksTable.getColumnModel().getColumnCount() > 0) {
            viewBooksTable.getColumnModel().getColumn(5).setHeaderValue("Stock");
        }

        ReturnHome.setText("Return to Home Page");
        ReturnHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHomeActionPerformed(evt);
            }
        });

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout BookTableLayout = new javax.swing.GroupLayout(BookTable);
        BookTable.setLayout(BookTableLayout);
        BookTableLayout.setHorizontalGroup(
            BookTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, BookTableLayout.createSequentialGroup()
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReturnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
        );
        BookTableLayout.setVerticalGroup(
            BookTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(BookTableLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(BookTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnHome, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1)))
        );

        jPanel3.add(BookTable, "card10");

        jLabel5.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Add a Book");
        jLabel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("Book Title:");

        jLabel7.setText("Book Authour:");

        jLabel8.setText("Book Publisher:");

        jLabel9.setText("Book Genre:");

        SubmitBook.setText("Submit");
        SubmitBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitBookActionPerformed(evt);
            }
        });

        jLabel29.setText("Book Price:");

        ReturnHome4.setText("Return to Home Page");
        ReturnHome4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHome4ActionPerformed(evt);
            }
        });

        jLabel3.setText("Book Stock:");

        javax.swing.GroupLayout AddBookLayout = new javax.swing.GroupLayout(AddBook);
        AddBook.setLayout(AddBookLayout);
        AddBookLayout.setHorizontalGroup(
            AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddBookLayout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(AddBookLayout.createSequentialGroup()
                        .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(BookAuthour, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jLabel8)
                            .addComponent(BookPublisher, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jLabel7)
                            .addComponent(BookTitle))
                        .addGap(75, 75, 75)
                        .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(BookStock, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(BookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel29)
                            .addComponent(BookGenre, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9)))
                    .addComponent(SubmitBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(ReturnHome4, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        AddBookLayout.setVerticalGroup(
            AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddBookLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(BookTitle)
                    .addComponent(BookGenre))
                .addGap(34, 34, 34)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookAuthour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookPublisher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookStock, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 45, Short.MAX_VALUE)
                .addGroup(AddBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitBook)
                    .addComponent(ReturnHome4))
                .addContainerGap())
        );

        jPanel3.add(AddBook, "card11");

        RemoveBook.setPreferredSize(new java.awt.Dimension(989, 399));

        jLabel12.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("Remove a Book");
        jLabel12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel13.setText("Book Title:");

        jLabel14.setText("Book Authour:");

        jLabel15.setText("Book Publisher:");

        jLabel16.setText("Book Genre:");

        SubmitRemoveBook.setText("Submit");
        SubmitRemoveBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitRemoveBookActionPerformed(evt);
            }
        });

        jLabel45.setText("Book Price:");

        ReturnHome5.setText("Return to Home Page");
        ReturnHome5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHome5ActionPerformed(evt);
            }
        });

        jLabel17.setText("Book Stock:");

        javax.swing.GroupLayout RemoveBookLayout = new javax.swing.GroupLayout(RemoveBook);
        RemoveBook.setLayout(RemoveBookLayout);
        RemoveBookLayout.setHorizontalGroup(
            RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(RemoveBookLayout.createSequentialGroup()
                .addGap(207, 207, 207)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(SubmitRemoveBook, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(RemoveBookLayout.createSequentialGroup()
                            .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel13)
                                .addComponent(BookTitleRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(75, 75, 75)
                            .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(BookGenreRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel16))))
                    .addGroup(RemoveBookLayout.createSequentialGroup()
                        .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RemoveBookLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(BookPublisherRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(75, 75, 75))
                            .addGroup(RemoveBookLayout.createSequentialGroup()
                                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel14)
                                    .addComponent(BookAuthourRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17)
                            .addComponent(BookStockRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(BookPriceRemove, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel45))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 55, Short.MAX_VALUE)
                .addComponent(ReturnHome5, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        RemoveBookLayout.setVerticalGroup(
            RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveBookLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookTitleRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookGenreRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel45, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel14, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookPriceRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookAuthourRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BookPublisherRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BookStockRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(RemoveBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitRemoveBook)
                    .addComponent(ReturnHome5))
                .addContainerGap())
        );

        jPanel3.add(RemoveBook, "card11");

        jLabel34.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel34.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel34.setText("List of Users");
        jLabel34.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        viewUsersTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserId", "Name", "UserPhoneField", "Email", "Phone"
            }
        ));
        jScrollPane3.setViewportView(viewUsersTable);

        ReturnHome1.setText("Return to Home Page");
        ReturnHome1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHome1ActionPerformed(evt);
            }
        });

        jButton2.setText("Print");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout UserTableLayout = new javax.swing.GroupLayout(UserTable);
        UserTable.setLayout(UserTableLayout);
        UserTableLayout.setHorizontalGroup(
            UserTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 989, Short.MAX_VALUE)
            .addGroup(UserTableLayout.createSequentialGroup()
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(ReturnHome1, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        UserTableLayout.setVerticalGroup(
            UserTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(UserTableLayout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(UserTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(ReturnHome1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel3.add(UserTable, "card10");

        jLabel35.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel35.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel35.setText("Add a User");
        jLabel35.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel37.setText("User Name:");

        jLabel38.setText("User Address:");

        jLabel39.setText("User Email:");

        SubmitUser.setText("Submit");
        SubmitUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitUserActionPerformed(evt);
            }
        });

        jLabel40.setText("User Phone:");

        ReturnHome2.setText("Return to Home Page");
        ReturnHome2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHome2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AddUserLayout = new javax.swing.GroupLayout(AddUser);
        AddUser.setLayout(AddUserLayout);
        AddUserLayout.setHorizontalGroup(
            AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(AddUserLayout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AddUserLayout.createSequentialGroup()
                        .addComponent(UserPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(AddUserLayout.createSequentialGroup()
                        .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel40)
                            .addComponent(UserEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel39))
                        .addContainerGap(369, Short.MAX_VALUE))
                    .addGroup(AddUserLayout.createSequentialGroup()
                        .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel38)
                                .addComponent(jLabel37)
                                .addComponent(UserNameField, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                                .addComponent(UserAddressField))
                            .addComponent(SubmitUser, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 217, Short.MAX_VALUE)
                        .addComponent(ReturnHome2, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        AddUserLayout.setVerticalGroup(
            AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AddUserLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel37)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserNameField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel38)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserAddressField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel39)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserPhoneField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(AddUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ReturnHome2)
                    .addComponent(SubmitUser))
                .addContainerGap())
        );

        jPanel3.add(AddUser, "card11");

        jLabel36.setFont(new java.awt.Font("Bauhaus 93", 0, 24)); // NOI18N
        jLabel36.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel36.setText("Remove a User");
        jLabel36.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel41.setText("User Name:");

        jLabel42.setText("User Address:");

        jLabel43.setText("User Email:");

        SubmitRemoveUser.setText("Submit");
        SubmitRemoveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitRemoveUserActionPerformed(evt);
            }
        });

        jLabel44.setText("User Phone:");

        ReturnHome3.setText("Return to Home Page");
        ReturnHome3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnHome3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RemoveUserLayout = new javax.swing.GroupLayout(RemoveUser);
        RemoveUser.setLayout(RemoveUserLayout);
        RemoveUserLayout.setHorizontalGroup(
            RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(RemoveUserLayout.createSequentialGroup()
                .addGap(370, 370, 370)
                .addGroup(RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(RemoveUserLayout.createSequentialGroup()
                        .addGroup(RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel42)
                            .addComponent(jLabel41)
                            .addComponent(UserNameFieldRemove)
                            .addComponent(UserAddressFieldRemove)
                            .addComponent(SubmitRemoveUser, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ReturnHome3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(RemoveUserLayout.createSequentialGroup()
                        .addGroup(RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(UserPhoneFieldRemove, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(UserEmailFieldRemove, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(jLabel43, javax.swing.GroupLayout.Alignment.LEADING))
                        .addContainerGap(369, Short.MAX_VALUE))))
        );
        RemoveUserLayout.setVerticalGroup(
            RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RemoveUserLayout.createSequentialGroup()
                .addGap(41, 41, 41)
                .addComponent(jLabel36, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(jLabel41)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserNameFieldRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel42)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserAddressFieldRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel43)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserEmailFieldRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel44)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(UserPhoneFieldRemove, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(RemoveUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SubmitRemoveUser)
                    .addComponent(ReturnHome3))
                .addContainerGap())
        );

        jPanel3.add(RemoveUser, "card11");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void LoginButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LoginButtonActionPerformed
        try {
            // TODO add your handling code here:
            String nameStr = Username.getText(); //gets user input for username
            String passStr = Password.getText();  //gets user input for password
            int countcheck = 0;                     //countcheck set to 0           
            
            String UserName2="";
            String Password2=""; 
            ResultSet result=DCC.query("SELECT UserName, Password FROM Admin WHERE Username='"+nameStr+"' and Password='"+passStr+"'");
            while(result.next()){
                //result.getString("FirstName");
                //result.getString("LastName");
                UserName2 = result.getString("UserName");
                Password2 = result.getString("Password");
            }
            //System.out.println(UserName2);
            
            
            
            if ("".equals(nameStr) || " ".equals(nameStr)) { //error checking, if the username field is empty
                JOptionPane.showMessageDialog(null,"Please enter your username"); //joptionpane to display message, asking user to enter student name
                countcheck = -1;  //countcheck set to minus 1
            }
            
            if ("".equals(passStr) || " ".equals(passStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter your password"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }
            
            if (!"".equals(nameStr) || " ".equals(nameStr)) { //error checking, if the username field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            if (!"".equals(passStr) || " ".equals(passStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            if (UserName2.equals(nameStr) && !Password2.equals(passStr) && countcheck==2) { //error checking, if the username field is empty
                JOptionPane.showMessageDialog(null,"Incorrect username and/or password, please try again"); //joptionpane to display message, asking user to enter student id
                countcheck = 2;  //countcheck set to minus 1
            }
            
            if (!UserName2.equals(nameStr) && Password2.equals(passStr) && countcheck==2) { //error checking, if the username field is empty
                JOptionPane.showMessageDialog(null,"Incorrect username and/or password, please try again"); //joptionpane to display message, asking user to enter student id
                countcheck = 2;  //countcheck set to minus 1
            }
            
            if (!UserName2.equals(nameStr) && !Password2.equals(passStr) && countcheck==2) { //error checking, if the username field is empty
                JOptionPane.showMessageDialog(null,"Incorrect username and/or password, please try again"); //joptionpane to display message, asking user to enter student id
                countcheck = 2;  //countcheck set to minus 1
            }
            
            if (UserName2.equals(nameStr) && Password2.equals(passStr) && countcheck==2) { //error checking, if the username field is empty
                countcheck = 3;  //countcheck set to minus 1
            }
            //l.getAdmin(Username.getText()
            if (countcheck==3){
                //if the countcheck is zero
                
                jPanel3.removeAll();   //remove jpanel
                jPanel3.repaint();
                jPanel3.revalidate();
                jPanel3.add(HomePage);
                jPanel3.repaint();
                jPanel3.revalidate();
            }
        } catch (SQLException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_LoginButtonActionPerformed

    private void PasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordActionPerformed

    private void UsernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_UsernameActionPerformed

    private void ViewBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBookButtonActionPerformed
      
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(BookTable);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
        DefaultTableModel reset = (DefaultTableModel) viewBooksTable.getModel();
        reset.setRowCount(0);
                   
            ResultSet result = null;
        try {
            result = DCC.query("SELECT * From Books");
        } catch (SQLException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        try {
            while(result.next()){
                
                //for(int i = 1; i < 7; i++){
                //System.out.print(result.getString(i) + "");
                //System.out.println();
                //}
                
                String Title=result.getString("Title");
                String Author=result.getString("Authour");
                String Publisher=result.getString("Publisher");
                String Genre=result.getString("Genre");
                String Price=result.getString("Price");
                String Stock=result.getString("Stock");
                String tbData[]  = {Title,Author,Publisher,Genre,Price,Stock};
                //System.out.println(Title);
                DefaultTableModel tblModel = (DefaultTableModel) viewBooksTable.getModel();
                tblModel.addRow(tbData);
            }
        } catch (SQLException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        

        //DefaultTableModel tblModel = (DefaultTableModel) viewBooksTable.getModel();
        

    }//GEN-LAST:event_ViewBookButtonActionPerformed

    private void ReturnHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHomeActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();


    }//GEN-LAST:event_ReturnHomeActionPerformed

    private void LogoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_LogoutButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(Login);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
        Username.setText(""); //sets username text field to empty
        Password.setText("");  //gets password text field to empty

    }//GEN-LAST:event_LogoutButtonActionPerformed

    private void SubmitBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitBookActionPerformed
        try {
            // TODO add your handling code here:
            String BookTitleStr = BookTitle.getText();  //gets user input for password
            String BookAuthourStr = BookAuthour.getText(); //gets user input for username
            String BookPublisherStr = BookPublisher.getText();  //gets user input for password
            String BookGenreStr = BookGenre.getText(); //gets user input for username
            String BookPriceStr = BookPrice.getText(); //gets user input for username
            String BookStockStr = BookStock.getText(); //gets user input for username
            
            int countcheck = 0;                     //countcheck set to 0
            
            
            
            if ("".equals(BookTitleStr) || " ".equals(BookTitleStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter title"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }
            
            
            if ("".equals(BookAuthourStr) || " ".equals(BookAuthourStr)) { //error checking, if the username field is empty
                JOptionPane.showMessageDialog(null,"Please enter authour"); //joptionpane to display message, asking user to enter student name
                countcheck = -1;  //countcheck set to minus 1
            }
            
            if ("".equals(BookPublisherStr) || " ".equals(BookPublisherStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter publisher"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }
            
            if ("".equals(BookGenreStr) || " ".equals(BookGenreStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter genre"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }
            
            if ("".equals(BookPriceStr) || " ".equals(BookPriceStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter book Price"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }
            
            if ("".equals(BookStockStr) || " ".equals(BookStockStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter book stock"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }            
            
            int stockInt = 0;
            try {
                stockInt = Integer.parseInt(BookStockStr);
            }
            catch (NumberFormatException e) {
                 //Not an integer
                 JOptionPane.showMessageDialog(null,"Book stock must be number");
                 countcheck = -1;
            }
            
            
            
            if (!"".equals(BookTitleStr) || " ".equals(BookTitleStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            
                        
            if (!"".equals(BookAuthourStr) || " ".equals(BookAuthourStr)) { //error checking, if the username field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            if (!"".equals(BookPublisherStr) || " ".equals(BookPublisherStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
        
            if (!"".equals(BookGenreStr) || " ".equals(BookGenreStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            if (!"".equals(BookPriceStr) || " ".equals(BookPriceStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }            
            
            //ResultSet result=DCC.query("SELECT UserName, Password FROM Admin WHERE Username='"+UserName+"' and Password='"+Password+"'");
            ResultSet result=DCC.query("SELECT Title, Authour, Publisher, Genre, Price FROM Books WHERE Title='"+BookTitleStr+"' and Authour='"+BookAuthourStr+"' and Publisher='"+BookPublisherStr+"' and Genre='"+BookGenreStr+"' and Price='"+BookPriceStr+"'");
            if(result.next()){
                JOptionPane.showMessageDialog(null,"Book in Database increasing stock by "+stockInt);
                int done =DCC.update("UPDATE Books SET Stock = Stock + "+stockInt+" WHERE Title='"+BookTitleStr+"' and Authour='"+BookAuthourStr+"' and Publisher='"+BookPublisherStr+"' and Genre='"+BookGenreStr+"' and Price='"+BookPriceStr+"'");
                countcheck = -1;
            }            
            
            
            
                
            //l.getAdmin(Username.getText()
            if (countcheck==5){
                JOptionPane.showMessageDialog(null,"Book successfully added to the library");
                try {
                    //if the countcheck is zero
                    
                    int done =DCC.update("INSERT INTO Books (Title, Authour, Publisher, Genre, Price, Stock) VALUES ('"+BookTitleStr+"', '"+BookAuthourStr+"', '"+BookPublisherStr+"', '"+BookGenreStr+"', '"+BookPriceStr+"', '"+stockInt+"')");
                    
                    jPanel3.removeAll();   //remove jpanel
                    jPanel3.repaint();
                    jPanel3.revalidate();
                    jPanel3.add(HomePage);
                    jPanel3.repaint();
                    jPanel3.revalidate();
                } catch (SQLException ex) {
                    Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
            
    }//GEN-LAST:event_SubmitBookActionPerformed

    private void ReturnHome4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHome4ActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
        

    }//GEN-LAST:event_ReturnHome4ActionPerformed

    private void AddBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddBookButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(AddBook);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();

    }//GEN-LAST:event_AddBookButtonActionPerformed

    private void RemoveBookButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveBookButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(RemoveBook);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();

    }//GEN-LAST:event_RemoveBookButtonActionPerformed

    private void ViewUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewUserButtonActionPerformed
        try {
            // TODO add your handling code here:
            jPanel3.removeAll();                          //remove jpanel
            jPanel3.repaint();
            jPanel3.revalidate();
            jPanel3.add(UserTable);                              //selects a jpanel, or question, at random
            jPanel3.repaint();
            jPanel3.revalidate();
            DefaultTableModel reset = (DefaultTableModel) viewUsersTable.getModel();
            reset.setRowCount(0);
            
            ResultSet result=DCC.query("SELECT * FROM Users");
            while(result.next()){
                String UserId=result.getString("UserId");
                String UserName=result.getString("UserName");
                String UserAddress=result.getString("UserAddress");
                String UserEmail=result.getString("UserEmail");
                String UserPhone=result.getString("UserPhone");               
                String tbData[]  = {UserId,UserName,UserAddress,UserEmail, UserPhone};
                DefaultTableModel tblModel = (DefaultTableModel) viewUsersTable.getModel();
                tblModel.addRow(tbData); 
            }
        } catch (SQLException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_ViewUserButtonActionPerformed

    private void ReturnHome1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHome1ActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_ReturnHome1ActionPerformed

    private void AddUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddUserButtonActionPerformed
        // TODO add your handling code here
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(AddUser);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
 
        
        //int done =DCC.update("INSERT INTO Users (FirstName, LastName, Age, Address) VALUES ('"+Fname+"', '"+Lname+"', '"+Age_+"', '"+Addr+"')");
    }//GEN-LAST:event_AddUserButtonActionPerformed

    private void SubmitUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitUserActionPerformed
    // TODO add your handling code here:
    //String useridStr = UserId.getText(); //gets user input for username
    String userNameStr = UserNameField.getText();  //gets user input for password
    String userAddressStr = UserAddressField.getText(); //gets user input for username
    String userEmailStr = UserEmailField.getText();  //gets user input for password
    String userPhoneStr = UserPhoneField.getText(); //gets user input for username

            int countcheck = 0;                     //countcheck set to 0  
        

            
            if ("".equals(userNameStr) || " ".equals(userNameStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user name"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }
            
            
            if ("".equals(userAddressStr) || " ".equals(userAddressStr)) { //error checking, if the username field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user address"); //joptionpane to display message, asking user to enter student name
                countcheck = -1;  //countcheck set to minus 1
            }
            
            if ("".equals(userEmailStr) || " ".equals(userEmailStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user email"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }         
                        
            if ("".equals(userPhoneStr) || " ".equals(userPhoneStr)) { //error checking, if the password field is empty
                JOptionPane.showMessageDialog(null,"Please enter a user phone number"); //joptionpane to display message, asking user to enter student id
                countcheck = -1;  //countcheck set to minus 1
            }
            
 
            /*try {
                 Integer.parseInt(ageStr);
            }
            catch (NumberFormatException e) {
                 //Not an integer
                 JOptionPane.showMessageDialog(null,"Age must be number");
                 countcheck = -1;
            }*/

            
            if (!"".equals(userNameStr) || " ".equals(userNameStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            
                        
            if (!"".equals(userAddressStr) || " ".equals(userAddressStr)) { //error checking, if the username field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            if (!"".equals(userEmailStr) || " ".equals(userEmailStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
        
            if (!"".equals(userPhoneStr) || " ".equals(userPhoneStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
                
            //l.getAdmin(Username.getText()
            if (countcheck==4){
            JOptionPane.showMessageDialog(null,"Added User " + userNameStr);
        try {
            //if the countcheck is zero
            
            int done =DCC.update("INSERT INTO Users (UserName, UserAddress, UserEmail, UserPhone) VALUES ('"+userNameStr+"', '"+userAddressStr+"', '"+userEmailStr+"', '"+userPhoneStr+"')");
            
            jPanel3.removeAll();   //remove jpanel
            jPanel3.repaint();
            jPanel3.revalidate();
            jPanel3.add(HomePage);
            jPanel3.repaint();
            jPanel3.revalidate();
        } catch (SQLException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
            }
        
    }//GEN-LAST:event_SubmitUserActionPerformed

    private void ReturnHome2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHome2ActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
        
        
    }//GEN-LAST:event_ReturnHome2ActionPerformed

    private void RemoveUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RemoveUserButtonActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(RemoveUser);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
        
    }//GEN-LAST:event_RemoveUserButtonActionPerformed

    private void SubmitRemoveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitRemoveUserActionPerformed
            try {                                                 
                // TODO add your handling code here:
                String userNameRemoveStr = UserNameFieldRemove.getText();  //gets user input for password
                String userAddressRemoveStr = UserAddressFieldRemove.getText(); //gets user input for username
                String userEmailRemoveStr = UserEmailFieldRemove.getText();  //gets user input for password
                String userPhoneRemoveStr = UserPhoneFieldRemove.getText(); //gets user input for username
                
                int countcheck = 0;                     //countcheck set to 0
                
                
                
                if ("".equals(userNameRemoveStr) || " ".equals(userNameRemoveStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter a user name"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                
                if ("".equals(userAddressRemoveStr) || " ".equals(userAddressRemoveStr)) { //error checking, if the username field is empty
                    JOptionPane.showMessageDialog(null,"Please enter a user address"); //joptionpane to display message, asking user to enter student name
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                if ("".equals(userEmailRemoveStr) || " ".equals(userEmailRemoveStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter a user email"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                if ("".equals(userPhoneRemoveStr) || " ".equals(userPhoneRemoveStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter a user phone number"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                /*int ageInt = 0;
                try {
                    ageInt = Integer.parseInt(ageStr);
                }
                catch (NumberFormatException e) {
                    //Not an integer
                    JOptionPane.showMessageDialog(null,"Age must be number");
                    countcheck = -1;
                }*/
                
                
                
                
                
                
                if (!"".equals(userNameRemoveStr) || " ".equals(userNameRemoveStr)) { //error checking, if the password field is empty
                    countcheck +=1;  //countcheck set to minus 1
                }
                
                
                
                if (!"".equals(userAddressRemoveStr) || " ".equals(userAddressRemoveStr)) { //error checking, if the username field is empty
                    countcheck +=1;  //countcheck set to minus 1
                }
                
                if (!"".equals(userEmailRemoveStr) || " ".equals(userEmailRemoveStr)) { //error checking, if the password field is empty
                    countcheck +=1;  //countcheck set to minus 1
                }
                
                if (!"".equals(userPhoneRemoveStr) || " ".equals(userPhoneRemoveStr)) { //error checking, if the password field is empty
                    countcheck +=1;  //countcheck set to minus 1
                }
                
                
                //ResultSet result=DCC.query("SELECT UserName, Password FROM Admin WHERE Username='"+UserName+"' and Password='"+Password+"'");
                ResultSet result=DCC.query("SELECT UserName, UserAddress, UserEmail, UserPhone FROM Users WHERE UserName='"+userNameRemoveStr+"' and UserAddress='"+userAddressRemoveStr+"' and UserEmail='"+userEmailRemoveStr+"' and UserPhone='"+userPhoneRemoveStr+"'");
                if(!result.next()){
                    JOptionPane.showMessageDialog(null,"User not found in database");
                    countcheck = -1;
                }
                
                
                //l.getAdmin(Username.getText()
                if (countcheck==4){

                        //if the countcheck is zero
                        JOptionPane.showMessageDialog(null,"Deleted User " + userNameRemoveStr);

                        int done =DCC.update("DELETE FROM Users WHERE UserName='"+userNameRemoveStr+"'");
                        
                        jPanel3.removeAll();   //remove jpanel
                        jPanel3.repaint();
                        jPanel3.revalidate();
                        jPanel3.add(HomePage);
                        jPanel3.repaint();
                        jPanel3.revalidate();

                }
                
            }
            catch (SQLException ex) {
                 Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE,null, ex);
            }
        
    }//GEN-LAST:event_SubmitRemoveUserActionPerformed

    private void ReturnHome3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHome3ActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_ReturnHome3ActionPerformed

    private void SubmitRemoveBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitRemoveBookActionPerformed
        // TODO add your handling code here:
            try {                                                 
                // TODO add your handling code here:
                String BookTitleStr = BookTitleRemove.getText();  //gets user input for password
                String BookAuthourStr = BookAuthourRemove.getText(); //gets user input for username
                String BookPublisherStr = BookPublisherRemove.getText();  //gets user input for password
                String BookGenreStr = BookGenreRemove.getText(); //gets user input for username
                String BookPriceStr = BookPriceRemove.getText();  //gets user input for password
                String BookStockStr = BookStockRemove.getText(); //gets user input for username
                
                int countcheck = 0;                     //countcheck set to 0
                
                               
                if ("".equals(BookTitleStr) || " ".equals(BookTitleStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter book title"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }
                              
                if ("".equals(BookAuthourStr) || " ".equals(BookAuthourStr)) { //error checking, if the username field is empty
                    JOptionPane.showMessageDialog(null,"Please enter book authour"); //joptionpane to display message, asking user to enter student name
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                if ("".equals(BookPublisherStr) || " ".equals(BookPublisherStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter book publisher"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                if ("".equals(BookGenreStr) || " ".equals(BookGenreStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter book genre"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                if ("".equals(BookPriceStr) || " ".equals(BookPriceStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter book price"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }
                
                if ("".equals(BookStockStr) || " ".equals(BookStockStr)) { //error checking, if the password field is empty
                    JOptionPane.showMessageDialog(null,"Please enter book stock"); //joptionpane to display message, asking user to enter student id
                    countcheck = -1;  //countcheck set to minus 1
                }             
                
                if ("".equals(BookStockStr) || " ".equals(BookStockStr)) { //error checking, if the password field is empty
                    countcheck = -1;  //countcheck set to minus 1
                }                            
                
                int stockInt = 0;
                try {
                    stockInt = Integer.parseInt(BookStockStr);
                }
                catch (NumberFormatException e) {
                    //Not an integer
                    JOptionPane.showMessageDialog(null,"Book stock must be number");
                    countcheck = -1;
                }
                
                
                
                
                
            if (!"".equals(BookTitleStr) || " ".equals(BookTitleStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
                        
            if (!"".equals(BookAuthourStr) || " ".equals(BookAuthourStr)) { //error checking, if the username field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            if (!"".equals(BookPublisherStr) || " ".equals(BookPublisherStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
        
            if (!"".equals(BookGenreStr) || " ".equals(BookGenreStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }
            
            if (!"".equals(BookPriceStr) || " ".equals(BookPriceStr)) { //error checking, if the password field is empty
                countcheck +=1;  //countcheck set to minus 1
            }      
            
      
            
            //ResultSet result=DCC.query("SELECT UserName, Password FROM Admin WHERE Username='"+UserName+"' and Password='"+Password+"'");
            ResultSet result=DCC.query("SELECT Title, Authour, Publisher, Genre, Price, Stock FROM Books WHERE Title='"+BookTitleStr+"' and Authour='"+BookAuthourStr+"' and Publisher='"+BookPublisherStr+"' and Genre='"+BookGenreStr+"' and Price='"+BookPriceStr+"' and Stock<2");
            if(result.next()){
                JOptionPane.showMessageDialog(null,"Book removed from the library");
                int done =DCC.update("DELETE FROM Books WHERE Title='"+BookTitleStr+"'");
                //int done =DCC.update("UPDATE Books SET Stock = "+stockInt+" WHERE Title='"+BookTitleStr+"' and Authour='"+BookAuthourStr+"' and Publisher='"+BookPublisherStr+"' and Genre='"+BookGenreStr+"' and Price='"+BookPriceStr+"'");
                countcheck = -1;
            }  
            
            
            //ResultSet result=DCC.query("SELECT UserName, Password FROM Admin WHERE Username='"+UserName+"' and Password='"+Password+"'");
            ResultSet result2=DCC.query("SELECT Title, Authour, Publisher, Genre, Price, Stock FROM Books WHERE Title='"+BookTitleStr+"' and Authour='"+BookAuthourStr+"' and Publisher='"+BookPublisherStr+"' and Genre='"+BookGenreStr+"' and Price='"+BookPriceStr+"' and Stock>0");
            if(result2.next()){
                countcheck += 1;
            }  
                
                //JOptionPane.showMessageDialog(null,"Going to counter statement "+countcheck);
                //l.getAdmin(Username.getText()
                if (countcheck==6){

                        //if the countcheck is zero

                        int done =DCC.update("UPDATE Books SET Stock = Stock - "+stockInt+" WHERE Title='"+BookTitleStr+"' and Authour='"+BookAuthourStr+"' and Publisher='"+BookPublisherStr+"' and Genre='"+BookGenreStr+"' and Price='"+BookPriceStr+"'");
                        ResultSet result3=DCC.query("SELECT Title, Authour, Publisher, Genre, Price, Stock FROM Books WHERE Title='"+BookTitleStr+"' and Authour='"+BookAuthourStr+"' and Publisher='"+BookPublisherStr+"' and Genre='"+BookGenreStr+"' and Price='"+BookPriceStr+"' and Stock<1");
                        if(result3.next()){
                        JOptionPane.showMessageDialog(null,"Book removed from the library");
                        int done2 =DCC.update("DELETE FROM Books WHERE Title='"+BookTitleStr+"'");
                        }  


                }
                
            }
            catch (SQLException ex) {
                 Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE,null, ex);
            }
        
        
        
    }//GEN-LAST:event_SubmitRemoveBookActionPerformed

    private void ReturnHome5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnHome5ActionPerformed
        // TODO add your handling code here:
        jPanel3.removeAll();                          //remove jpanel
        jPanel3.repaint();
        jPanel3.revalidate();
        jPanel3.add(HomePage);                              //selects a jpanel, or question, at random
        jPanel3.repaint();
        jPanel3.revalidate();
    }//GEN-LAST:event_ReturnHome5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Boolean printTable = viewBooksTable.print();
        if (printTable) {
            JOptionPane.showMessageDialog(null, "Printing is done");
        }
        } catch (PrinterException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try {
            // TODO add your handling code here:
            Boolean printTable = viewUsersTable.print();
        if (printTable) {
            JOptionPane.showMessageDialog(null, "Printing is done");
        }
        } catch (PrinterException ex) {
            Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton2ActionPerformed
  
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) { //the main function
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SampleJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SampleJFrame().setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (ClassNotFoundException ex) {
                    Logger.getLogger(SampleJFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AddBook;
    private javax.swing.JButton AddBookButton;
    private javax.swing.JPanel AddUser;
    private javax.swing.JButton AddUserButton;
    private javax.swing.JTextField BookAuthour;
    private javax.swing.JTextField BookAuthourRemove;
    private javax.swing.JTextField BookGenre;
    private javax.swing.JTextField BookGenreRemove;
    private javax.swing.JTextField BookPrice;
    private javax.swing.JTextField BookPriceRemove;
    private javax.swing.JTextField BookPublisher;
    private javax.swing.JTextField BookPublisherRemove;
    private javax.swing.JTextField BookStock;
    private javax.swing.JTextField BookStockRemove;
    private javax.swing.JPanel BookTable;
    private javax.swing.JTextField BookTitle;
    private javax.swing.JTextField BookTitleRemove;
    private javax.swing.JPanel HomePage;
    private javax.swing.JPanel Login;
    private javax.swing.JButton LoginButton;
    private javax.swing.JButton LogoutButton;
    private javax.swing.JTextField Password;
    private javax.swing.JPanel RemoveBook;
    private javax.swing.JButton RemoveBookButton;
    private javax.swing.JPanel RemoveUser;
    private javax.swing.JButton RemoveUserButton;
    private javax.swing.JButton ReturnHome;
    private javax.swing.JButton ReturnHome1;
    private javax.swing.JButton ReturnHome2;
    private javax.swing.JButton ReturnHome3;
    private javax.swing.JButton ReturnHome4;
    private javax.swing.JButton ReturnHome5;
    private javax.swing.JButton SubmitBook;
    private javax.swing.JButton SubmitRemoveBook;
    private javax.swing.JButton SubmitRemoveUser;
    private javax.swing.JButton SubmitUser;
    private javax.swing.JTextField UserAddressField;
    private javax.swing.JTextField UserAddressFieldRemove;
    private javax.swing.JTextField UserEmailField;
    private javax.swing.JTextField UserEmailFieldRemove;
    private javax.swing.JTextField UserNameField;
    private javax.swing.JTextField UserNameFieldRemove;
    private javax.swing.JTextField UserPhoneField;
    private javax.swing.JTextField UserPhoneFieldRemove;
    private javax.swing.JPanel UserTable;
    private javax.swing.JTextField Username;
    private javax.swing.JButton ViewBookButton;
    private javax.swing.JButton ViewUserButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable viewBooksTable;
    private javax.swing.JTable viewUsersTable;
    // End of variables declaration//GEN-END:variables
    private javax.swing.table.DefaultTableModel tableModel;
}
